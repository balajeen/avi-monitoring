# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: analytics_policy.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import options_pb2 as options__pb2
import match_pb2 as match__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='analytics_policy.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n\x16\x61nalytics_policy.proto\x1a\roptions.proto\x1a\x0bmatch.proto\"\xd0\x01\n\x0f\x43lientLogFilter\x12\r\n\x05index\x18\x01 \x02(\r\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x1f\n\tclient_ip\x18\x03 \x01(\x0b\x32\x0c.IpAddrMatch\x12\x1a\n\x0b\x61ll_headers\x18\x04 \x01(\x08:\x05\x66\x61lse\x12\x19\n\x03uri\x18\x05 \x01(\x0b\x32\x0c.StringMatch\x12\x16\n\x07\x65nabled\x18\x06 \x02(\x08:\x05\x66\x61lse\x12\x30\n\x08\x64uration\x18\x07 \x01(\r:\x02\x33\x30\x42\x1a\xa8\xa6\x1d\x10\xda\xa6\x1d\x12{ 0 : \'infinite\' }\"\xb0\x04\n\x0e\x46ullClientLogs\x12\x83\x01\n\x07\x65nabled\x18\x01 \x02(\x08:\x05\x66\x61lseBk\xa2\xa6\x1dgCapture all client logs including connections and requests.  When disabled, only errors will be logged.\x12\x8c\x01\n\x08\x64uration\x18\x02 \x01(\r:\x02\x33\x30\x42v\xa8\xa6\x1d\x10\xda\xa6\x1d\x12{ 0 : \'infinite\' }\xa2\xa6\x1dXHow long should the system capture all logs, measured in minutes. Set to 0 for infinite.\x12\x30\n\x0b\x61ll_headers\x18\x03 \x01(\x08:\x05\x66\x61lseB\x14\xa2\xa6\x1d\x10Log all headers.\x12\xd6\x01\n\x08throttle\x18\x04 \x01(\r:\x02\x31\x30\x42\xbf\x01\xa8\xa6\x1d\x04\xa2\xa6\x1d\xac\x01This setting limits the number of non-significant logs generated per second for this VS on each SE. Default is 10 logs per second. Set it to zero (0) to disable throttling.\xea\xa7\x1d\x06\x31\x37.1.3\"\x9a\x02\n\x15MetricsRealTimeUpdate\x12\x89\x01\n\x07\x65nabled\x18\x01 \x02(\x08:\x05\x66\x61lseBq\xa2\xa6\x1dmEnables real time metrics collection.  When disabled, 6 hour view is the most granular the system will track.\x12u\n\x08\x64uration\x18\x02 \x01(\r:\x02\x33\x30\x42_\xa8\xa6\x1d\x10\xda\xa6\x1d\x12{ 0 : \'infinite\' }\xa2\xa6\x1d\x41Real time metrics collection duration in minutes. 0 for infinite.\"\xa6\x02\n\x16\x43lientInsightsSampling\x12U\n\tskip_uris\x18\x01 \x01(\x0b\x32\x0c.StringMatchB4\xa2\xa6\x1d\x30URL patterns to avoid when inserting RUM script.\x12W\n\x0bsample_uris\x18\x02 \x01(\x0b\x32\x0c.StringMatchB4\xa2\xa6\x1d\x30URL patterns to check when inserting RUM script.\x12\\\n\tclient_ip\x18\x03 \x01(\x0b\x32\x0c.IpAddrMatchB;\xa2\xa6\x1d\x37\x43lient IP addresses to check when inserting RUM script.\"\xf4\x08\n\x0f\x41nalyticsPolicy\x12)\n\x10\x66ull_client_logs\x18\x01 \x01(\x0b\x32\x0f.FullClientLogs\x12\x37\n\x12\x63lient_log_filters\x18\x02 \x03(\x0b\x32\x10.ClientLogFilterB\t\xfa\xa6\x1d\x05index\x12\xbb\x02\n\x10udf_log_throttle\x18\x08 \x01(\r:\x02\x31\x30\x42\x9c\x02\xa8\xa6\x1d\x04\xa2\xa6\x1d\x89\x02This setting limits the total number of UDF logs generated per second for this VS on each SE. UDF logs are generated due to the configured client log filters or the rules with logging enabled. Default is 10 logs per second. Set it to zero (0) to disable throttling.\xea\xa7\x1d\x06\x31\x37.1.3\x12\xe2\x01\n\x18significant_log_throttle\x18\n \x01(\r:\x02\x31\x30\x42\xbb\x01\xa8\xa6\x1d\x04\xa2\xa6\x1d\xa8\x01This setting limits the number of significant logs generated per second for this VS on each SE. Default is 10 logs per second. Set it to zero (0) to disable throttling.\xea\xa7\x1d\x06\x31\x37.1.3\x12\x83\x01\n\x0f\x63lient_insights\x18\x03 \x01(\x0e\x32\x0f.ClientInsights:\x0bNO_INSIGHTSBL\xa2\xa6\x1dHGain insights from sampled client to server HTTP requests and responses.\x12\x87\x01\n\x17metrics_realtime_update\x18\x05 \x01(\x0b\x32\x16.MetricsRealTimeUpdateBN\xa2\xa6\x1dJSettings to turn on realtime metrics and set duration for realtime updates\x12?\n\x18\x63lient_insights_sampling\x18\x07 \x01(\x0b\x32\x17.ClientInsightsSamplingB\x04\xa2\xa6\x1d\x00\x12\x88\x01\n\x07\x65nabled\x18\x0b \x01(\x08:\x04trueBq\xa2\xa6\x1d\x63\x44isable Analytics on this VirtualService. This will disable the collection of both metrics and logs\xea\xa7\x1d\x06\x31\x37.2.4*u\n\x0fMetricsMgrPorts\x12\x17\n\x12METRICS_MGR_PORT_0\x10\x91\'\x12\x17\n\x12METRICS_MGR_PORT_1\x10\xa8\'\x12\x17\n\x12METRICS_MGR_PORT_2\x10\xa9\'\x12\x17\n\x12METRICS_MGR_PORT_3\x10\xaa\'*d\n\x0e\x43lientInsights\x12 \n\x0bNO_INSIGHTS\x10\x00\x1a\x0f\x8a\x97\"\x0bNo Insights\x12\x18\n\x07PASSIVE\x10\x02\x1a\x0b\x8a\x97\"\x07Passive\x12\x16\n\x06\x41\x43TIVE\x10\x03\x1a\n\x8a\x97\"\x06\x41\x63tiveB5\n\x18\x63om.avinetworks.protobufB\x16\x41nalyticsPolicyPackage\x88\x01\x01')
  ,
  dependencies=[options__pb2.DESCRIPTOR,match__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_METRICSMGRPORTS = _descriptor.EnumDescriptor(
  name='MetricsMgrPorts',
  full_name='MetricsMgrPorts',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRICS_MGR_PORT_0', index=0, number=5009,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_MGR_PORT_1', index=1, number=5032,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_MGR_PORT_2', index=2, number=5033,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_MGR_PORT_3', index=3, number=5034,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2553,
  serialized_end=2670,
)
_sym_db.RegisterEnumDescriptor(_METRICSMGRPORTS)

MetricsMgrPorts = enum_type_wrapper.EnumTypeWrapper(_METRICSMGRPORTS)
_CLIENTINSIGHTS = _descriptor.EnumDescriptor(
  name='ClientInsights',
  full_name='ClientInsights',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NO_INSIGHTS', index=0, number=0,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\227\"\013No Insights')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PASSIVE', index=1, number=2,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\227\"\007Passive')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIVE', index=2, number=3,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\227\"\006Active')),
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2672,
  serialized_end=2772,
)
_sym_db.RegisterEnumDescriptor(_CLIENTINSIGHTS)

ClientInsights = enum_type_wrapper.EnumTypeWrapper(_CLIENTINSIGHTS)
METRICS_MGR_PORT_0 = 5009
METRICS_MGR_PORT_1 = 5032
METRICS_MGR_PORT_2 = 5033
METRICS_MGR_PORT_3 = 5034
NO_INSIGHTS = 0
PASSIVE = 2
ACTIVE = 3



_CLIENTLOGFILTER = _descriptor.Descriptor(
  name='ClientLogFilter',
  full_name='ClientLogFilter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='ClientLogFilter.index', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='ClientLogFilter.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_ip', full_name='ClientLogFilter.client_ip', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='all_headers', full_name='ClientLogFilter.all_headers', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uri', full_name='ClientLogFilter.uri', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='enabled', full_name='ClientLogFilter.enabled', index=5,
      number=6, type=8, cpp_type=7, label=2,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='duration', full_name='ClientLogFilter.duration', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=30,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\250\246\035\020\332\246\035\022{ 0 : \'infinite\' }'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=55,
  serialized_end=263,
)


_FULLCLIENTLOGS = _descriptor.Descriptor(
  name='FullClientLogs',
  full_name='FullClientLogs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enabled', full_name='FullClientLogs.enabled', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035gCapture all client logs including connections and requests.  When disabled, only errors will be logged.'))),
    _descriptor.FieldDescriptor(
      name='duration', full_name='FullClientLogs.duration', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=30,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\250\246\035\020\332\246\035\022{ 0 : \'infinite\' }\242\246\035XHow long should the system capture all logs, measured in minutes. Set to 0 for infinite.'))),
    _descriptor.FieldDescriptor(
      name='all_headers', full_name='FullClientLogs.all_headers', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\020Log all headers.'))),
    _descriptor.FieldDescriptor(
      name='throttle', full_name='FullClientLogs.throttle', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\250\246\035\004\242\246\035\254\001This setting limits the number of non-significant logs generated per second for this VS on each SE. Default is 10 logs per second. Set it to zero (0) to disable throttling.\352\247\035\00617.1.3'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=266,
  serialized_end=826,
)


_METRICSREALTIMEUPDATE = _descriptor.Descriptor(
  name='MetricsRealTimeUpdate',
  full_name='MetricsRealTimeUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enabled', full_name='MetricsRealTimeUpdate.enabled', index=0,
      number=1, type=8, cpp_type=7, label=2,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035mEnables real time metrics collection.  When disabled, 6 hour view is the most granular the system will track.'))),
    _descriptor.FieldDescriptor(
      name='duration', full_name='MetricsRealTimeUpdate.duration', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=30,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\250\246\035\020\332\246\035\022{ 0 : \'infinite\' }\242\246\035AReal time metrics collection duration in minutes. 0 for infinite.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=829,
  serialized_end=1111,
)


_CLIENTINSIGHTSSAMPLING = _descriptor.Descriptor(
  name='ClientInsightsSampling',
  full_name='ClientInsightsSampling',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='skip_uris', full_name='ClientInsightsSampling.skip_uris', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\0350URL patterns to avoid when inserting RUM script.'))),
    _descriptor.FieldDescriptor(
      name='sample_uris', full_name='ClientInsightsSampling.sample_uris', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\0350URL patterns to check when inserting RUM script.'))),
    _descriptor.FieldDescriptor(
      name='client_ip', full_name='ClientInsightsSampling.client_ip', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\0357Client IP addresses to check when inserting RUM script.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1114,
  serialized_end=1408,
)


_ANALYTICSPOLICY = _descriptor.Descriptor(
  name='AnalyticsPolicy',
  full_name='AnalyticsPolicy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='full_client_logs', full_name='AnalyticsPolicy.full_client_logs', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_log_filters', full_name='AnalyticsPolicy.client_log_filters', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\372\246\035\005index'))),
    _descriptor.FieldDescriptor(
      name='udf_log_throttle', full_name='AnalyticsPolicy.udf_log_throttle', index=2,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\250\246\035\004\242\246\035\211\002This setting limits the total number of UDF logs generated per second for this VS on each SE. UDF logs are generated due to the configured client log filters or the rules with logging enabled. Default is 10 logs per second. Set it to zero (0) to disable throttling.\352\247\035\00617.1.3'))),
    _descriptor.FieldDescriptor(
      name='significant_log_throttle', full_name='AnalyticsPolicy.significant_log_throttle', index=3,
      number=10, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\250\246\035\004\242\246\035\250\001This setting limits the number of significant logs generated per second for this VS on each SE. Default is 10 logs per second. Set it to zero (0) to disable throttling.\352\247\035\00617.1.3'))),
    _descriptor.FieldDescriptor(
      name='client_insights', full_name='AnalyticsPolicy.client_insights', index=4,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035HGain insights from sampled client to server HTTP requests and responses.'))),
    _descriptor.FieldDescriptor(
      name='metrics_realtime_update', full_name='AnalyticsPolicy.metrics_realtime_update', index=5,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035JSettings to turn on realtime metrics and set duration for realtime updates'))),
    _descriptor.FieldDescriptor(
      name='client_insights_sampling', full_name='AnalyticsPolicy.client_insights_sampling', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\000'))),
    _descriptor.FieldDescriptor(
      name='enabled', full_name='AnalyticsPolicy.enabled', index=7,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035cDisable Analytics on this VirtualService. This will disable the collection of both metrics and logs\352\247\035\00617.2.4'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1411,
  serialized_end=2551,
)

_CLIENTLOGFILTER.fields_by_name['client_ip'].message_type = match__pb2._IPADDRMATCH
_CLIENTLOGFILTER.fields_by_name['uri'].message_type = match__pb2._STRINGMATCH
_CLIENTINSIGHTSSAMPLING.fields_by_name['skip_uris'].message_type = match__pb2._STRINGMATCH
_CLIENTINSIGHTSSAMPLING.fields_by_name['sample_uris'].message_type = match__pb2._STRINGMATCH
_CLIENTINSIGHTSSAMPLING.fields_by_name['client_ip'].message_type = match__pb2._IPADDRMATCH
_ANALYTICSPOLICY.fields_by_name['full_client_logs'].message_type = _FULLCLIENTLOGS
_ANALYTICSPOLICY.fields_by_name['client_log_filters'].message_type = _CLIENTLOGFILTER
_ANALYTICSPOLICY.fields_by_name['client_insights'].enum_type = _CLIENTINSIGHTS
_ANALYTICSPOLICY.fields_by_name['metrics_realtime_update'].message_type = _METRICSREALTIMEUPDATE
_ANALYTICSPOLICY.fields_by_name['client_insights_sampling'].message_type = _CLIENTINSIGHTSSAMPLING
DESCRIPTOR.message_types_by_name['ClientLogFilter'] = _CLIENTLOGFILTER
DESCRIPTOR.message_types_by_name['FullClientLogs'] = _FULLCLIENTLOGS
DESCRIPTOR.message_types_by_name['MetricsRealTimeUpdate'] = _METRICSREALTIMEUPDATE
DESCRIPTOR.message_types_by_name['ClientInsightsSampling'] = _CLIENTINSIGHTSSAMPLING
DESCRIPTOR.message_types_by_name['AnalyticsPolicy'] = _ANALYTICSPOLICY
DESCRIPTOR.enum_types_by_name['MetricsMgrPorts'] = _METRICSMGRPORTS
DESCRIPTOR.enum_types_by_name['ClientInsights'] = _CLIENTINSIGHTS

ClientLogFilter = _reflection.GeneratedProtocolMessageType('ClientLogFilter', (_message.Message,), dict(
  DESCRIPTOR = _CLIENTLOGFILTER,
  __module__ = 'analytics_policy_pb2'
  # @@protoc_insertion_point(class_scope:ClientLogFilter)
  ))
_sym_db.RegisterMessage(ClientLogFilter)

FullClientLogs = _reflection.GeneratedProtocolMessageType('FullClientLogs', (_message.Message,), dict(
  DESCRIPTOR = _FULLCLIENTLOGS,
  __module__ = 'analytics_policy_pb2'
  # @@protoc_insertion_point(class_scope:FullClientLogs)
  ))
_sym_db.RegisterMessage(FullClientLogs)

MetricsRealTimeUpdate = _reflection.GeneratedProtocolMessageType('MetricsRealTimeUpdate', (_message.Message,), dict(
  DESCRIPTOR = _METRICSREALTIMEUPDATE,
  __module__ = 'analytics_policy_pb2'
  # @@protoc_insertion_point(class_scope:MetricsRealTimeUpdate)
  ))
_sym_db.RegisterMessage(MetricsRealTimeUpdate)

ClientInsightsSampling = _reflection.GeneratedProtocolMessageType('ClientInsightsSampling', (_message.Message,), dict(
  DESCRIPTOR = _CLIENTINSIGHTSSAMPLING,
  __module__ = 'analytics_policy_pb2'
  # @@protoc_insertion_point(class_scope:ClientInsightsSampling)
  ))
_sym_db.RegisterMessage(ClientInsightsSampling)

AnalyticsPolicy = _reflection.GeneratedProtocolMessageType('AnalyticsPolicy', (_message.Message,), dict(
  DESCRIPTOR = _ANALYTICSPOLICY,
  __module__ = 'analytics_policy_pb2'
  # @@protoc_insertion_point(class_scope:AnalyticsPolicy)
  ))
_sym_db.RegisterMessage(AnalyticsPolicy)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\030com.avinetworks.protobufB\026AnalyticsPolicyPackage\210\001\001'))
_CLIENTINSIGHTS.values_by_name["NO_INSIGHTS"].has_options = True
_CLIENTINSIGHTS.values_by_name["NO_INSIGHTS"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\227\"\013No Insights'))
_CLIENTINSIGHTS.values_by_name["PASSIVE"].has_options = True
_CLIENTINSIGHTS.values_by_name["PASSIVE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\227\"\007Passive'))
_CLIENTINSIGHTS.values_by_name["ACTIVE"].has_options = True
_CLIENTINSIGHTS.values_by_name["ACTIVE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\227\"\006Active'))
_CLIENTLOGFILTER.fields_by_name['duration'].has_options = True
_CLIENTLOGFILTER.fields_by_name['duration']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\250\246\035\020\332\246\035\022{ 0 : \'infinite\' }'))
_FULLCLIENTLOGS.fields_by_name['enabled'].has_options = True
_FULLCLIENTLOGS.fields_by_name['enabled']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035gCapture all client logs including connections and requests.  When disabled, only errors will be logged.'))
_FULLCLIENTLOGS.fields_by_name['duration'].has_options = True
_FULLCLIENTLOGS.fields_by_name['duration']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\250\246\035\020\332\246\035\022{ 0 : \'infinite\' }\242\246\035XHow long should the system capture all logs, measured in minutes. Set to 0 for infinite.'))
_FULLCLIENTLOGS.fields_by_name['all_headers'].has_options = True
_FULLCLIENTLOGS.fields_by_name['all_headers']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\020Log all headers.'))
_FULLCLIENTLOGS.fields_by_name['throttle'].has_options = True
_FULLCLIENTLOGS.fields_by_name['throttle']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\250\246\035\004\242\246\035\254\001This setting limits the number of non-significant logs generated per second for this VS on each SE. Default is 10 logs per second. Set it to zero (0) to disable throttling.\352\247\035\00617.1.3'))
_METRICSREALTIMEUPDATE.fields_by_name['enabled'].has_options = True
_METRICSREALTIMEUPDATE.fields_by_name['enabled']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035mEnables real time metrics collection.  When disabled, 6 hour view is the most granular the system will track.'))
_METRICSREALTIMEUPDATE.fields_by_name['duration'].has_options = True
_METRICSREALTIMEUPDATE.fields_by_name['duration']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\250\246\035\020\332\246\035\022{ 0 : \'infinite\' }\242\246\035AReal time metrics collection duration in minutes. 0 for infinite.'))
_CLIENTINSIGHTSSAMPLING.fields_by_name['skip_uris'].has_options = True
_CLIENTINSIGHTSSAMPLING.fields_by_name['skip_uris']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\0350URL patterns to avoid when inserting RUM script.'))
_CLIENTINSIGHTSSAMPLING.fields_by_name['sample_uris'].has_options = True
_CLIENTINSIGHTSSAMPLING.fields_by_name['sample_uris']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\0350URL patterns to check when inserting RUM script.'))
_CLIENTINSIGHTSSAMPLING.fields_by_name['client_ip'].has_options = True
_CLIENTINSIGHTSSAMPLING.fields_by_name['client_ip']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\0357Client IP addresses to check when inserting RUM script.'))
_ANALYTICSPOLICY.fields_by_name['client_log_filters'].has_options = True
_ANALYTICSPOLICY.fields_by_name['client_log_filters']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\372\246\035\005index'))
_ANALYTICSPOLICY.fields_by_name['udf_log_throttle'].has_options = True
_ANALYTICSPOLICY.fields_by_name['udf_log_throttle']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\250\246\035\004\242\246\035\211\002This setting limits the total number of UDF logs generated per second for this VS on each SE. UDF logs are generated due to the configured client log filters or the rules with logging enabled. Default is 10 logs per second. Set it to zero (0) to disable throttling.\352\247\035\00617.1.3'))
_ANALYTICSPOLICY.fields_by_name['significant_log_throttle'].has_options = True
_ANALYTICSPOLICY.fields_by_name['significant_log_throttle']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\250\246\035\004\242\246\035\250\001This setting limits the number of significant logs generated per second for this VS on each SE. Default is 10 logs per second. Set it to zero (0) to disable throttling.\352\247\035\00617.1.3'))
_ANALYTICSPOLICY.fields_by_name['client_insights'].has_options = True
_ANALYTICSPOLICY.fields_by_name['client_insights']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035HGain insights from sampled client to server HTTP requests and responses.'))
_ANALYTICSPOLICY.fields_by_name['metrics_realtime_update'].has_options = True
_ANALYTICSPOLICY.fields_by_name['metrics_realtime_update']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035JSettings to turn on realtime metrics and set duration for realtime updates'))
_ANALYTICSPOLICY.fields_by_name['client_insights_sampling'].has_options = True
_ANALYTICSPOLICY.fields_by_name['client_insights_sampling']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\000'))
_ANALYTICSPOLICY.fields_by_name['enabled'].has_options = True
_ANALYTICSPOLICY.fields_by_name['enabled']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035cDisable Analytics on this VirtualService. This will disable the collection of both metrics and logs\352\247\035\00617.2.4'))
# @@protoc_insertion_point(module_scope)
