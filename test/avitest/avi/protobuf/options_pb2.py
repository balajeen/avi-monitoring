# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: options.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='options.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n\roptions.proto\x1a google/protobuf/descriptor.proto\"8\n\x19MetricsProviderHypervisor\x12\x0e\n\x06vmware\x18\x01 \x01(\t\x12\x0b\n\x03kvm\x18\x02 \x01(\t\"k\n\x1dMetricRespLatencyTimeInterval\x12%\n\x05start\x18\x01 \x02(\x0e\x32\x16.MetricRespLatencyTime\x12#\n\x03\x65nd\x18\x02 \x02(\x0e\x32\x16.MetricRespLatencyTime\"\xf2\x02\n\x0eMetricsOptions\x12)\n\x10metrics_obj_type\x18\x01 \x01(\x0e\x32\x0f.MetricsObjType\x12\x34\n\x13metrics_aggregation\x18\x02 \x03(\x0e\x32\x17.MetricsAggregationEnum\x12!\n\x19metrics_z_score_threshold\x18\x03 \x01(\x01\x12 \n\x07indexes\x18\x04 \x03(\x0e\x32\x0f.MetricsIndexes\x12R\n\x0e\x61rchive_policy\x18\x05 \x01(\x0e\x32\x1c.MetricsDbTableArchivePolicy:\x1cMETRICS_DB_TABLE_ARCHIVE_ALL\x12!\n\x08table_id\x18\x06 \x01(\x0e\x32\x0f.MetricsTableId\x12\x16\n\x0emetrics_object\x18\x07 \x01(\x08\x12+\n\x0c\x65ntity_types\x18\x08 \x03(\x0e\x32\x15.MetricsDataObjIdType\"\x99\x01\n\x14MetricsIndexesOption\x12\x13\n\x0bprimary_key\x18\x01 \x01(\x08\x12\r\n\x05\x64type\x18\x02 \x01(\x05\x12\x0f\n\x07toindex\x18\x03 \x01(\x08\x12\x10\n\x08nullable\x18\x04 \x01(\x08\x12\x12\n\nunique_key\x18\x05 \x01(\x08\x12\x13\n\x0b\x66oreign_key\x18\x06 \x01(\t\x12\x11\n\tenum_name\x18\x07 \x01(\t\"\xe9\x02\n\x18MetricsAnomalyzerOptions\x12\x37\n\x12\x61nomaly_model_opts\x18\x01 \x03(\x0b\x32\x1b.MetricsAnomalyModelOptions\x12\xc7\x01\n\x10skip_eval_period\x18\x02 \x01(\x08:\x05\x66\x61lseB\xa5\x01\xa2\xa6\x1d\xa0\x01Skip the training period for anomaly. Should only be used for special error cases where we don\'t wantto wait for exponential moving average to learn the pattern\x12J\n\x16\x61nomaly_interpretation\x18\x04 \x01(\x0e\x32\x16.AnomalyInterpretation:\x12\x43OMBINE_MODELS_ALL\"\xb7\x07\n\x1aMetricsAnomalyModelOptions\x12\xf6\x01\n\ranomaly_model\x18\x01 \x01(\x0e\x32\x0e.AnomalyModels:\x1f\x45XPONENTIAL_WEIGHTED_MOVING_AVGB\xad\x01\xa2\xa6\x1d\xa8\x01The model to use. For Holt Winters methods, thealpha, beta, gamma, are set with inputs from the paper: Aberrant Behavior Detection in Time Series for Network Monitoring\x12z\n\x06period\x18\x02 \x01(\x0e\x32\r.MetricPeriodB[\xa2\xa6\x1dWSpecify the period for which the seasonality applies. To be used with HoltWinters only.\x12\xa1\x01\n\x0bseasonality\x18\x03 \x01(\x05\x42\x8b\x01\xa2\xa6\x1d\x86\x01Seasonality for the metric if HoltWinters is to be applied. E.g. for data repeating annually with per month samples, seasonality is 12\x12\x65\n\x05\x61lpha\x18\x05 \x01(\x01:\x04\x30.22BP\xa2\xa6\x1dLHW: alpha. Gives 95% weight to (5min) samples in the last hour (12 samples).\x12h\n\x04\x62\x65ta\x18\x06 \x01(\x01:\x07\x30.00034BQ\xa2\xa6\x1dMHW: beta. Gives 50% weight to (5min) samples in the last week (2016 samples).\x12\"\n\x05gamma\x18\x07 \x01(\x01:\x04\x30.22B\r\xa2\xa6\x1d\tHW: gamma\x12\"\n\x05\x64\x65lta\x18\t \x01(\x01:\x04\x30.22B\r\xa2\xa6\x1d\tHW: delta\x12g\n\x14\x61llowed_entity_types\x18\n \x03(\x0e\x32\x15.MetricsDataObjIdTypeB2\xa2\xa6\x1d.Entity types for which to do anomaly detection\"\xe3\x02\n\x12MetricsRuleOptions\x12#\n\trule_type\x18\x01 \x01(\x0e\x32\x10.MetricsRuleType\x12\x0f\n\x07low_wms\x18\x02 \x03(\x01\x12\x10\n\x08high_wms\x18\x03 \x03(\x01\x12\x15\n\revent_id_name\x18\x04 \x01(\t\x12\x8c\x01\n\x17only_positive_anomalies\x18\x06 \x01(\x08:\x04trueBe\xa2\xa6\x1d\x61generate events only for positive deviations. Used only for the Generate Events on Anomaly option\x12_\n\x12valid_event_period\x18\x0b \x01(\x0e\x32\r.MetricPeriodB4\xa2\xa6\x1d\x30Period for which the events are to be generated.\"\x99\x01\n\x0fMetricIdOptions\x12)\n\x10metrics_obj_type\x18\x01 \x01(\x0e\x32\x0f.MetricsObjType\x12\x1e\n\x16metrics_obj_field_name\x18\x02 \x01(\t\x12\x1a\n\x12resource_threshold\x18\x03 \x01(\r\x12\x1f\n\x11is_hs_contributor\x18\x04 \x01(\x08:\x04true\"\x9f\x01\n\x0c\x41lertOptions\x12\x1a\n\x05level\x18\x01 \x02(\x0e\x32\x0b.AlertLevel\x12\x14\n\tthreshold\x18\x02 \x01(\r:\x01\x31\x12?\n\tcfg_scope\x18\x03 \x01(\x0e\x32\x11.AlertConfigScope:\x19\x41LERT_CONFIG_SCOPE_TENANT\x12\x1c\n\x04name\x18\x04 \x02(\t:\x0eSystem-Default\"\xa5\x02\n\x15MetricsDerivationData\x12\x12\n\nmetric_ids\x18\x01 \x02(\t\x12+\n\rderivation_fn\x18\x02 \x02(\x0e\x32\x14.MetricsDerivationFn\x12)\n\x1ainclude_derivation_metrics\x18\x03 \x01(\x08:\x05\x66\x61lse\x12%\n\x16\x65xclude_derived_metric\x18\x04 \x01(\x08:\x05\x66\x61lse\x12+\n\x1cresult_has_additional_fields\x18\x05 \x01(\x08:\x05\x66\x61lse\x12$\n\x0bjoin_tables\x18\x06 \x01(\x0e\x32\x0f.MetricsTableId\x12&\n\x17skip_backend_derivation\x18\x07 \x01(\x08:\x05\x66\x61lse\":\n\x10\x43loudTypeOptions\x12&\n\x10\x61llowed_licenses\x18\x01 \x03(\x0e\x32\x0c.LicenseType\"k\n\x06IpAddr\x12\x1c\n\x04\x61\x64\x64r\x18\x01 \x02(\tB\x0e\xa2\xa6\x1d\nIP address\x12\x19\n\x04type\x18\x02 \x02(\x0e\x32\x0b.IpAddrType:(\x8a\xa6\x1d\x1cIP4 Address format <x.x.x.x>\x9a\xa6\x1d\x04\x61\x64\x64r\"i\n\x0cIpAddrPrefix\x12\x18\n\x07ip_addr\x18\x01 \x02(\x0b\x32\x07.IpAddr\x12\x0c\n\x04mask\x18\x02 \x02(\x05:1\x8a\xa6\x1d\x1dIP4 Prefix format <x.x.x.x/x>\x9a\xa6\x1d\x0cip_addr,mask*V\n\x12\x43omparisonOperator\x12\t\n\x05\x43O_EQ\x10\x00\x12\t\n\x05\x43O_GT\x10\x01\x12\t\n\x05\x43O_GE\x10\x02\x12\t\n\x05\x43O_LT\x10\x03\x12\t\n\x05\x43O_LE\x10\x04\x12\t\n\x05\x43O_NE\x10\x05*\xb6\x02\n\x0cMetricPeriod\x12\x17\n\x13METRIC_PERIOD_UNDEF\x10\x00\x12\x19\n\x15METRIC_PERIOD_1SECOND\x10\x01\x12\x19\n\x15METRIC_PERIOD_5SECOND\x10\x05\x12\x19\n\x15METRIC_PERIOD_1MINUTE\x10<\x12\x1a\n\x15METRIC_PERIOD_5MINUTE\x10\xac\x02\x12\x18\n\x13METRIC_PERIOD_1HOUR\x10\x90\x1c\x12\x18\n\x13METRIC_PERIOD_2HOUR\x10\xa0\x38\x12\x18\n\x12METRIC_PERIOD_1DAY\x10\x80\xa3\x05\x12\x19\n\x13METRIC_PERIOD_1WEEK\x10\x80\xf5$\x12\x1b\n\x14METRIC_PERIOD_1MONTH\x10\x80\x9a\x9e\x01\x12\x1a\n\x13METRIC_PERIOD_1YEAR\x10\xbd\x8a\x86\x0f*?\n\nMetricType\x12\x0c\n\x08\x41\x42SOLUTE\x10\x01\x12\t\n\x05GAUGE\x10\x02\x12\x0b\n\x07\x43OUNTER\x10\x03\x12\x0b\n\x07\x44\x45RIVED\x10\x04*9\n\x0cSeMetricType\x12\x15\n\x11SE_MTYPE_ABSOLUTE\x10\x01\x12\x12\n\x0eSE_MTYPE_GAUGE\x10\x02*\x81\n\n\x13MetricsDerivationFn\x12\x11\n\rMETRICS_ALIAS\x10\x00\x12\x1e\n\x1aSUM_FIRST_N_DIVIDE_BY_LAST\x10\x01\x12\x10\n\x0cSUM_BW_GAUGE\x10\x02\x12\x1e\n\x1a\x41VG_GET_POST_OTHER_LATENCY\x10\x03\x12\x17\n\x13\x41PPDEX_ON_3_BUCKETS\x10\x04\x12\x17\n\x13\x41PPDEX_ON_4_BUCKETS\x10\x05\x12\r\n\tSUM_GAUGE\x10\x06\x12\x11\n\rSUM_N_METRICS\x10\x07\x12\x17\n\x13\x41PPDEX_ON_5_BUCKETS\x10\x08\x12\x17\n\x13\x41PPDEX_ON_6_BUCKETS\x10\t\x12\x19\n\x15\x41PPDEX_ON_CONNECTIONS\x10\n\x12\x17\n\x13\x41PPDEX_ON_2_BUCKETS\x10\x0b\x12\x16\n\x12\x41VG_CLIENT_LATENCY\x10\x0c\x12\x1b\n\x17\x41VG_APPLICATION_LATENCY\x10\r\x12\x11\n\rMIN_N_METRICS\x10\x0e\x12)\n%SUM_FIRST_N_DIVIDE_BY_LAST_PERCENTAGE\x10\x0f\x12\"\n\x1eL4_CONNECTION_ERROR_PERCENTAGE\x10\x10\x12\x19\n\x15\x41VG_L4_CLIENT_LATENCY\x10\x11\x12\x19\n\x15\x43HECK_FOR_TRANSITIONS\x10\x12\x12\x1c\n\x18SUBSTRACT_ALL_FROM_FIRST\x10\x13\x12\x1a\n\x16\x41VG_N_OVER_TIME_PERIOD\x10\x14\x12\x19\n\x15\x41VG_NAVIGATION_TIMING\x10\x15\x12\x12\n\x0e\x41VG_RUM_VISITS\x10\x16\x12\x1d\n\x19PCT_SSL_ERROR_CONNECTIONS\x10\x17\x12\x15\n\x11\x41VG_RESPONSE_TIME\x10\x18\x12$\n SUM_RATES_FIRST_N_DIVIDE_BY_LAST\x10\x19\x12/\n+SUM_RATES_FIRST_N_DIVIDE_BY_LAST_PERCENTAGE\x10\x1a\x12\x15\n\x11PCT_CACHE_METRICS\x10\x1b\x12\x31\n-SUM_FIRST_N_DIVIDE_BY_SECLAST_EXCL_ERROR_RATE\x10\x1c\x12\x1e\n\x1aSUM_FIRST_N_SUBSTRACT_LAST\x10\x1d\x12\x14\n\x10\x41VG_POOL_METRICS\x10\x1e\x12\x0f\n\x0b\x41VG_POOL_BW\x10\x1f\x12-\n)AVG_BY_SUBSTRACT_ALL_FROM_FIRST_OVER_TIME\x10 \x12\x0f\n\x0b\x41VG_RSA_PFS\x10!\x12\x0b\n\x07\x45VAL_FN\x10\"\x12\x1a\n\x16SSL_PROTOCOL_INDICATOR\x10#\x12\x36\n2SUM_FIRST_N_DIVIDE_BY_SECLAST_RATE_EXCL_ERROR_RATE\x10$\x12,\n(SUBSTRACT_ALL_FROM_FIRST_WITH_FLOOR_ZERO\x10%\x12\x16\n\x12\x41VAILABLE_CAPACITY\x10&\x12\x19\n\x15\x43ONNECTION_SATURATION\x10\'\x12\x13\n\x0f\x41VG_RSA_NON_PFS\x10(\x12\x19\n\x15SSL_HANDSHAKES_NONPFS\x10)\x12\x11\n\rDYN_MEM_USAGE\x10*\x12\x32\n.FIRST_DIVIDE_BY_DIFFERENCE_OF_SECOND_AND_THIRD\x10+*\x8c\x03\n\x0bMetricUnits\x12\x10\n\x0cMETRIC_COUNT\x10\x00\x12\x13\n\x0f\x42ITS_PER_SECOND\x10\x01\x12\x10\n\x0cMILLISECONDS\x10\x02\x12\x0b\n\x07SECONDS\x10\x03\x12\x0e\n\nPER_SECOND\x10\x04\x12\t\n\x05\x42YTES\x10\x05\x12\x0b\n\x07PERCENT\x10\x06\x12\x0e\n\nKILO_BYTES\x10\x07\x12\x19\n\x15KILO_BYTES_PER_SECOND\x10\x08\x12\x14\n\x10\x42YTES_PER_SECOND\x10\t\x12\x18\n\x14KILO_BITS_PER_SECOND\x10\n\x12\x0e\n\nGIGA_BYTES\x10\x0b\x12\x0e\n\nMEGA_BYTES\x10\x0c\x12\x0e\n\nNORMALIZED\x10\r\x12\n\n\x06STRING\x10\x0e\x12\x07\n\x03SEC\x10\x0f\x12\x07\n\x03MIN\x10\x10\x12\x08\n\x04\x44\x41YS\x10\x11\x12\x06\n\x02KB\x10\x12\x12\x06\n\x02MB\x10\x13\x12\x06\n\x02GB\x10\x14\x12\x08\n\x04MBPS\x10\x15\x12\x07\n\x03GHZ\x10\x16\x12\t\n\x05RATIO\x10\x17\x12\x08\n\x04WORD\x10\x18\x12\x10\n\x0cMICROSECONDS\x10\x19\x12\n\n\x06HEALTH\x10\x1a*r\n\x0fMetricsRuleType\x12\x1e\n\x1aGENERATE_EVENT_WITH_LOW_WM\x10\x00\x12\x1e\n\x1aGENERATE_EVENT_FOR_ANOMALY\x10\x01\x12\x1f\n\x1bGENERATE_EVENT_WITH_HIGH_WM\x10\x02*N\n\x07PbAggOp\x12\x0b\n\x07\x41GG_SUM\x10\x01\x12\x0b\n\x07\x41GG_MAX\x10\x02\x12\x0b\n\x07\x41GG_MIN\x10\x03\x12\x0b\n\x07\x41GG_ANY\x10\x04\x12\x0f\n\x0b\x41GG_SUM_ANY\x10\x05*G\n\x11VinfraErrCategory\x12\x16\n\x12VINFRA_RECOVERABLE\x10\x01\x12\x1a\n\x16VINFRA_NON_RECOVERABLE\x10\x02*\x9d\x01\n\x15MetricRespLatencyTime\x12\x16\n\x12METRIC_RESP_TIME_0\x10\x00\x12\x19\n\x14METRIC_RESP_TIME_400\x10\x90\x03\x12\x19\n\x14METRIC_RESP_TIME_500\x10\xf4\x03\x12\x1a\n\x15METRIC_RESP_TIME_1600\x10\xc0\x0c\x12\x1a\n\x15METRIC_RESP_TIME_2000\x10\xd0\x0f*\xbd\x02\n\x16MetricsAggregationEnum\x12\x14\n\x10METRICS_AGG_NONE\x10\x00\x12\x14\n\x10METRICS_AGG_NODE\x10\x01\x12\x14\n\x10METRICS_AGG_POOL\x10\x02\x12\x16\n\x12METRICS_AGG_SERVER\x10\x03\x12\x19\n\x15METRICS_AGG_NODE_POOL\x10\x04\x12\x1b\n\x17METRICS_AGG_NODE_SERVER\x10\x05\x12\x1b\n\x17METRICS_AGG_POOL_SERVER\x10\x06\x12 \n\x1cMETRICS_AGG_NODE_POOL_SERVER\x10\x07\x12\x17\n\x13METRICS_AGG_SERVICE\x10\x08\x12\x1c\n\x18METRICS_AGG_NODE_SERVICE\x10\t\x12\x1b\n\x17METRICS_AGG_DIMENSIONID\x10\n*\xda\t\n\x0eMetricsObjType\x12\x1c\n\x18METRICS_OBJ_TYPE_UNKNOWN\x10\x64\x12\x15\n\x11VSERVER_L4_SERVER\x10\x65\x12\x15\n\x11VSERVER_L4_CLIENT\x10\x66\x12\x15\n\x11VSERVER_L7_SERVER\x10g\x12\x15\n\x11VSERVER_L7_CLIENT\x10h\x12\x12\n\x0eVM_METRICS_OBJ\x10i\x12\x12\n\x0eSE_METRICS_OBJ\x10k\x12\x0f\n\x0bVSERVER_RUM\x10l\x12\x1a\n\x16\x43ONTROLLER_METRICS_OBJ\x10m\x12\x16\n\x12METRICS_COLLECTION\x10n\x12\"\n\x1eMETRICS_RUM_PREAGG_BROWSER_OBJ\x10o\x12\"\n\x1eMETRICS_RUM_PREAGG_COUNTRY_OBJ\x10p\x12\"\n\x1eMETRICS_RUM_PREAGG_DEVTYPE_OBJ\x10q\x12\x1f\n\x1bMETRICS_RUM_PREAGG_LANG_OBJ\x10r\x12\x1d\n\x19METRICS_RUM_PREAGG_OS_OBJ\x10s\x12\x1e\n\x1aMETRICS_RUM_PREAGG_URL_OBJ\x10t\x12\x17\n\x13METRICS_ANOMALY_OBJ\x10u\x12\x1b\n\x17METRICS_HEALTHSCORE_OBJ\x10v\x12\'\n#METRICS_RESOURCE_TIMING_BROWSER_OBJ\x10w\x12\"\n\x1eMETRICS_RESOURCE_TIMING_OS_OBJ\x10x\x12\'\n#METRICS_RESOURCE_TIMING_COUNTRY_OBJ\x10y\x12$\n METRICS_RESOURCE_TIMING_LANG_OBJ\x10z\x12\'\n#METRICS_RESOURCE_TIMING_DEVTYPE_OBJ\x10{\x12#\n\x1fMETRICS_RESOURCE_TIMING_URL_OBJ\x10|\x12)\n%METRICS_RESOURCE_TIMING_DIMENSION_OBJ\x10}\x12$\n METRICS_RESOURCE_TIMING_BLOB_OBJ\x10~\x12\x13\n\x0fMETRICS_DOS_OBJ\x10\x7f\x12#\n\x1eMETRICS_RUM_PREAGG_IPGROUP_OBJ\x10\x80\x01\x12\x1d\n\x18METRICS_APP_INSIGHTS_OBJ\x10\x81\x01\x12\x1c\n\x17METRICS_VSERVER_DNS_OBJ\x10\x82\x01\x12\x1b\n\x16METRICS_SERVER_DNS_OBJ\x10\x83\x01\x12!\n\x1cMETRICS_SERVICE_INSIGHTS_OBJ\x10\x84\x01\x12 \n\x1bMETRICS_SOURCE_INSIGHTS_OBJ\x10\x85\x01\x12\x1d\n\x18METRICS_TENANT_STATS_OBJ\x10\x86\x01\x12\x1c\n\x17METRICS_SE_IF_STATS_OBJ\x10\x87\x01\x12\x1d\n\x18METRICS_USER_METRICS_OBJ\x10\x88\x01\x12\x1a\n\x15METRICS_WAF_GROUP_OBJ\x10\x89\x01\x12\x19\n\x14METRICS_WAF_RULE_OBJ\x10\x8a\x01\x12\x18\n\x13METRICS_WAF_TAG_OBJ\x10\x8b\x01\x12\x1e\n\x19METRICS_PROCESS_STATS_OBJ\x10\x8c\x01*\xa7\x01\n\rAggregateType\x12\x16\n\x12\x41GGREGATE_TYPE_ALL\x10\x64\x12\x18\n\x14\x41GGREGATE_TYPE_FIRST\x10\x65\x12&\n\"AGGREGATE_TYPE_PRIMARY_KEY_IP_PORT\x10g\x12\x1e\n\x1a\x41GGREGATE_TYPE_TS_EARLIEST\x10h\x12\x1c\n\x18\x41GGREGATE_TYPE_TS_LATEST\x10i*\x8a\x0c\n\x0eMetricsIndexes\x12\x34\n\x10METRIC_TIMESTAMP\x10\x01\x1a\x1e\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x0b\xb2\x98\"\x02\x18\x00\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12\x42\n\rMETRIC_PERIOD\x10\x02\x1a/\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x08\xb2\x98\"\r:\x0bperiod_type\xb2\x98\"\x02\x18\x00\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12\x45\n\x08POOL_KEY\x10\x03\x1a\x37\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x15\x32\x13pool_table.pool_key\xb2\x98\"\x02 \x01\xb2\x98\"\x02(\x01\x12\x42\n\x07OBJ_KEY\x10\x04\x1a\x35\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x13\x32\x11obj_table.obj_key\xb2\x98\"\x02 \x01\xb2\x98\"\x02(\x01\x12K\n\nENTITY_KEY\x10\x05\x1a;\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x19\x32\x17\x65ntity_table.entity_key\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12\x45\n\x08NODE_KEY\x10\x06\x1a\x37\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x15\x32\x13node_table.node_key\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12N\n\x0b\x43OUNTRY_KEY\x10\x07\x1a=\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x1b\x32\x19\x63ountry_table.country_key\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12?\n\x06OS_KEY\x10\x08\x1a\x33\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x11\x32\x0fos_table.os_key\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12\x42\n\x07URL_KEY\x10\t\x1a\x35\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x13\x32\x11url_table.url_key\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12N\n\x0b\x44\x45VTYPE_KEY\x10\n\x1a=\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x1b\x32\x19\x64\x65vtype_table.devtype_key\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12\x45\n\x08LANG_KEY\x10\x0b\x1a\x37\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x15\x32\x13lang_table.lang_key\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12N\n\x0b\x42ROWSER_KEY\x10\x0c\x1a=\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x1b\x32\x19\x62rowser_table.browser_key\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12\r\n\tTIMESTAMP\x10\r\x12\x0c\n\x08OBJ_TYPE\x10\x0e\x12\x1a\n\x16METRIC_RUM_SAMPLE_TYPE\x10\x0f\x12\r\n\tMETRIC_ID\x10\x10\x12\x0c\n\x08PRIORITY\x10\x11\x12\x30\n\x0b\x43I_SRC_TYPE\x10\x12\x1a\x1f\xb2\x98\"\x02\x10\x08\xb2\x98\"\x15:\x13metrics_ci_src_type\x12\x0c\n\x08\x42LOB_KEY\x10\x13\x12N\n\x0bIPGROUP_KEY\x10\x14\x1a=\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x1b\x32\x19ipgroup_table.ipgroup_key\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12K\n\nTENANT_KEY\x10\x15\x1a;\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x19\x32\x17tenant_table.tenant_key\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12;\n\x0b\x45NTITY_TYPE\x10\x16\x1a*\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x08\xb2\x98\"\x0e:\x0c\x65ntity_types\xb2\x98\"\x02\x18\x00\xb2\x98\"\x02(\x01\x12K\n\nATTACK_KEY\x10\x17\x1a;\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x19\x32\x17\x61ttack_table.attack_key\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01\x12T\n\x0f\x44IMENSIONID_KEY\x10\x18\x1a?\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"#2!dimensionid_table.dimensionid_key\xb2\x98\"\x02\x18\x00\xb2\x98\"\x02(\x01\x12L\n\x11METRICS_DIMENSION\x10\x19\x1a\x35\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x08\xb2\x98\"\x19:\x17metrics_dimension_types\xb2\x98\"\x02\x18\x00\xb2\x98\"\x02(\x01\x12\x42\n\x07\x41SN_KEY\x10\x1a\x1a\x35\xb2\x98\"\x02\x08\x01\xb2\x98\"\x02\x10\x01\xb2\x98\"\x02\x18\x00\xb2\x98\"\x13\x32\x11\x61sn_table.asn_key\xb2\x98\"\x02 \x00\xb2\x98\"\x02(\x01*\xc0\x02\n\x10MetricsDimension\x12&\n\"METRICS_DIMENSION_METRIC_TIMESTAMP\x10\x00\x12\x1d\n\x19METRICS_DIMENSION_COUNTRY\x10\x01\x12\x18\n\x14METRICS_DIMENSION_OS\x10\x02\x12\x19\n\x15METRICS_DIMENSION_URL\x10\x03\x12\x1d\n\x19METRICS_DIMENSION_DEVTYPE\x10\x04\x12\x1a\n\x16METRICS_DIMENSION_LANG\x10\x05\x12\x1d\n\x19METRICS_DIMENSION_BROWSER\x10\x06\x12\x1d\n\x19METRICS_DIMENSION_IPGROUP\x10\x07\x12\x1c\n\x18METRICS_DIMENSION_ATTACK\x10\x08\x12\x19\n\x15METRICS_DIMENSION_ASN\x10\t*\x9d\x02\n\x1bMetricsDbTableArchivePolicy\x12!\n\x1dMETRICS_DB_TABLE_ARCHIVE_NONE\x10\x00\x12 \n\x1cMETRICS_DB_TABLE_ARCHIVE_ALL\x10\x01\x12$\n METRICS_DB_TABLE_ARCHIVE_HIGHEST\x10\x02\x12#\n\x1fMETRICS_DB_TABLE_ARCHIVE_LOWEST\x10\x03\x12 \n\x1cMETRICS_DB_TABLE_ARCHIVE_DAY\x10\x04\x12%\n!METRICS_DB_TABLE_ARCHIVE_DAY_WEEK\x10\x05\x12%\n!METRICS_DB_TABLE_ARCHIVE_DAY_YEAR\x10\x06*\xda\x08\n\x0eMetricsTableId\x12\x16\n\x12METRICS_TABLE_NONE\x10\x00\x12\x19\n\x15METRICS_TABLE_ANOMALY\x10\x01\x12\"\n\x1eMETRICS_TABLE_CONTROLLER_STATS\x10\x02\x12\x1e\n\x1aMETRICS_TABLE_HEALTH_SCORE\x10\x03\x12\x1a\n\x16METRICS_TABLE_SE_STATS\x10\x04\x12#\n\x1fMETRICS_TABLE_VSERVER_L4_SERVER\x10\x05\x12#\n\x1fMETRICS_TABLE_VSERVER_L4_CLIENT\x10\x06\x12#\n\x1fMETRICS_TABLE_VSERVER_L7_CLIENT\x10\x07\x12#\n\x1fMETRICS_TABLE_VSERVER_L7_SERVER\x10\x08\x12$\n METRICS_TABLE_RUM_PREAGG_BROWSER\x10\n\x12$\n METRICS_TABLE_RUM_PREAGG_COUNTRY\x10\x0b\x12$\n METRICS_TABLE_RUM_PREAGG_DEVTYPE\x10\x0c\x12!\n\x1dMETRICS_TABLE_RUM_PREAGG_LANG\x10\r\x12\x1f\n\x1bMETRICS_TABLE_RUM_PREAGG_OS\x10\x0e\x12 \n\x1cMETRICS_TABLE_RUM_PREAGG_URL\x10\x0f\x12\x1f\n\x1bMETRICS_TABLE_RUM_ANALYTICS\x10\x10\x12\x1a\n\x16METRICS_TABLE_VM_STATS\x10\x17\x12%\n!METRICS_TABLE_RESOURCE_TIMING_DIM\x10\x18\x12&\n\"METRICS_TABLE_RESOURCE_TIMING_BLOB\x10\x19\x12$\n METRICS_TABLE_RUM_PREAGG_IPGROUP\x10\x1a\x12\x1f\n\x1bMETRICS_TABLE_DOS_ANALYTICS\x10\x1b\x12\x1e\n\x1aMETRICS_TABLE_APP_INSIGHTS\x10\x1c\x12\x1d\n\x19METRICS_TABLE_VSERVER_DNS\x10\x1d\x12\x1c\n\x18METRICS_TABLE_SERVER_DNS\x10\x1e\x12\"\n\x1eMETRICS_TABLE_SERVICE_INSIGHTS\x10\x1f\x12!\n\x1dMETRICS_TABLE_SOURCE_INSIGHTS\x10 \x12\x1e\n\x1aMETRICS_TABLE_TENANT_STATS\x10!\x12\x1d\n\x19METRICS_TABLE_SE_IF_STATS\x10\"\x12\x1e\n\x1aMETRICS_TABLE_USER_METRICS\x10#\x12\x1b\n\x17METRICS_TABLE_WAF_GROUP\x10$\x12\x19\n\x15METRICS_TABLE_WAF_TAG\x10%\x12\x1a\n\x16METRICS_TABLE_WAF_RULE\x10&\x12\x1f\n\x1bMETRICS_TABLE_PROCESS_STATS\x10\'*~\n\rAnomalyModels\x12\x1a\n\x16\x45XPONENTIAL_MOVING_AVG\x10\x01\x12#\n\x1f\x45XPONENTIAL_WEIGHTED_MOVING_AVG\x10\x02\x12\x15\n\x11HOLTWINTERS_AT_AS\x10\x04\x12\x15\n\x11HOLTWINTERS_AT_MS\x10\x08*G\n\x15\x41nomalyInterpretation\x12\x16\n\x12\x43OMBINE_MODELS_ALL\x10\x00\x12\x16\n\x12\x43OMBINE_MODELS_ANY\x10\x01*\xae\x01\n\x0e\x41ttackCategory\x12\x43\n\nVOLUMETRIC\x10\x00\x1a\x33\x92\x97\"/Class of attacks which are volumetric in nature\x12W\n\x0eNON_VOLUMETRIC\x10\x01\x1a\x43\x92\x97\"?Class of attacks which are specifically non-volumetricin nature*f\n\x16MetricsAgentMsgHandler\x12\x19\n\x15METRICS_HANDLER_LOCAL\x10\x00\x12\x17\n\x13METRICS_HANDLER_RUM\x10\x01\x12\x18\n\x14METRICS_HANDLER_DDOS\x10\x02*c\n\x1aMetricsAggregationFunction\x12\r\n\tMAGG_NONE\x10\x00\x12\x0c\n\x08MAGG_AVG\x10\x01\x12\x0c\n\x08MAGG_SUM\x10\x02\x12\x0c\n\x08MAGG_MAX\x10\x03\x12\x0c\n\x08MAGG_MIN\x10\x04*D\n\x0c\x41\x63iSchemaTag\x12\x0c\n\x08\x41\x43I_MDEV\x10\x00\x12\x0f\n\x0b\x41\x43I_MDEVCFG\x10\x01\x12\x15\n\x11\x41\x43I_MFUNC_VSERVER\x10\x02*\xb7\x01\n\x11MetricsEntityType\x12\x1a\n\x16VSERVER_METRICS_ENTITY\x10\x01\x12\x15\n\x11VM_METRICS_ENTITY\x10\x02\x12\x15\n\x11SE_METRICS_ENTITY\x10\x03\x12\x1d\n\x19\x43ONTROLLER_METRICS_ENTITY\x10\x04\x12\x1e\n\x1a\x41PPLICATION_METRICS_ENTITY\x10\x05\x12\x19\n\x15TENANT_METRICS_ENTITY\x10\x06*\xd6\x02\n\x14MetricsDataObjIdType\x12&\n\"METRICS_OBJ_ID_TYPE_VIRTUALSERVICE\x10\x00\x12\x1e\n\x1aMETRICS_OBJ_ID_TYPE_SERVER\x10\x01\x12\x1c\n\x18METRICS_OBJ_ID_TYPE_POOL\x10\x02\x12%\n!METRICS_OBJ_ID_TYPE_SERVICEENGINE\x10\x04\x12&\n\"METRICS_OBJ_ID_TYPE_VIRTUALMACHINE\x10\x05\x12\"\n\x1eMETRICS_OBJ_ID_TYPE_CONTROLLER\x10\x06\x12\x1e\n\x1aMETRICS_OBJ_ID_TYPE_TENANT\x10\x07\x12\x1f\n\x1bMETRICS_OBJ_ID_TYPE_CLUSTER\x10\x08\x12$\n METRICS_OBJ_ID_TYPE_SE_INTERFACE\x10\t*w\n\x18MetricAnomalyzerPriority\x12\x15\n\x11M_ANOMALYZER_HIGH\x10\x01\x12\x17\n\x13M_ANOMALYZER_MEDIUM\x10\x02\x12\x14\n\x10M_ANOMALYZER_LOW\x10\x03\x12\x15\n\x11M_ANOMALYZER_NONE\x10\x04*p\n\x13\x45ventDetailsOptions\x12\x16\n\x12\x45VENT_DETAILS_NONE\x10\x00\x12!\n\x1d\x45VENT_DETAILS_INCLUDE_SUMMARY\x10\x01\x12\x1e\n\x1a\x45VENT_DETAILS_ONLY_SUMMARY\x10\x02*\\\n\nAlertLevel\x12\x16\n\tALERT_LOW\x10\x01\x1a\x07\x8a\x97\"\x03Low\x12\x1c\n\x0c\x41LERT_MEDIUM\x10\x02\x1a\n\x8a\x97\"\x06Medium\x12\x18\n\nALERT_HIGH\x10\x03\x1a\x08\x8a\x97\"\x04High*\xb7\x01\n\x18\x41lertActionGroupDefaults\x12\x13\n\x0f\x41\x43TIONGROUP_LOW\x10\x01\x12\x16\n\x12\x41\x43TIONGROUP_MEDIUM\x10\x02\x12\x14\n\x10\x41\x43TIONGROUP_HIGH\x10\x03\x12\x1a\n\x16\x41\x43TIONGROUP_SYSLOG_ALL\x10\x04\x12\x1d\n\x19\x41\x43TIONGROUP_SYSLOG_CONFIG\x10\x05\x12\x1d\n\x19\x41\x43TIONGROUP_SYSLOG_SYSTEM\x10\x06*O\n\x10\x41lertConfigScope\x12\x1d\n\x19\x41LERT_CONFIG_SCOPE_TENANT\x10\x00\x12\x1c\n\x18\x41LERT_CONFIG_SCOPE_ADMIN\x10\x01*\x1d\n\nIpAddrType\x12\x06\n\x02V4\x10\x00\x12\x07\n\x03\x44NS\x10\x01*7\n\x0fLicenseTierType\x12\x11\n\rENTERPRISE_16\x10\x00\x12\x11\n\rENTERPRISE_18\x10\x01*k\n\x0bLicenseType\x12\x17\n\x13LIC_BACKEND_SERVERS\x10\x01\x12\x0f\n\x0bLIC_SOCKETS\x10\x02\x12\r\n\tLIC_CORES\x10\x03\x12\r\n\tLIC_HOSTS\x10\x04\x12\x14\n\x10LIC_SE_BANDWIDTH\x10\x05:@\n\x15service_transactional\x12\x1f.google.protobuf.ServiceOptions\x18\xd1\x86\x03 \x01(\x08:9\n\x0eservice_q_name\x12\x1f.google.protobuf.ServiceOptions\x18\xd2\x86\x03 \x01(\t:>\n\x13service_rpc_timeout\x12\x1f.google.protobuf.ServiceOptions\x18\xd3\x86\x03 \x01(\r:>\n\x14method_transactional\x12\x1e.google.protobuf.MethodOptions\x18\xd1\x86\x03 \x01(\x08:7\n\rmethod_q_name\x12\x1e.google.protobuf.MethodOptions\x18\xd2\x86\x03 \x01(\t:<\n\x12method_rpc_timeout\x12\x1e.google.protobuf.MethodOptions\x18\xd3\x86\x03 \x01(\r::\n\x10method_expirable\x12\x1e.google.protobuf.MethodOptions\x18\xd4\x86\x03 \x01(\x08:2\n\trefers_to\x12\x1d.google.protobuf.FieldOptions\x18\xe1\xd4\x03 \x01(\t:7\n\x0eweak_refers_to\x12\x1d.google.protobuf.FieldOptions\x18\xe2\xd4\x03 \x01(\t:3\n\nbelongs_to\x12\x1d.google.protobuf.FieldOptions\x18\xe3\xd4\x03 \x01(\t:6\n\rf_description\x12\x1d.google.protobuf.FieldOptions\x18\xe4\xd4\x03 \x01(\t:<\n\x05units\x12\x1d.google.protobuf.FieldOptions\x18\xe5\xd4\x03 \x01(\x0e\x32\x0c.MetricUnits:.\n\x05range\x12\x1d.google.protobuf.FieldOptions\x18\xe6\xd4\x03 \x01(\t:0\n\x07pattern\x12\x1d.google.protobuf.FieldOptions\x18\xe7\xd4\x03 \x01(\t:5\n\x0cmin_elements\x12\x1d.google.protobuf.FieldOptions\x18\xe8\xd4\x03 \x01(\x05:5\n\x0cmax_elements\x12\x1d.google.protobuf.FieldOptions\x18\xe9\xd4\x03 \x01(\x05:3\n\nunion_enum\x12\x1d.google.protobuf.FieldOptions\x18\xea\xd4\x03 \x01(\t:7\n\x0especial_values\x12\x1d.google.protobuf.FieldOptions\x18\xeb\xd4\x03 \x01(\t:A\n\x0bmetric_type\x12\x1d.google.protobuf.FieldOptions\x18\xec\xd4\x03 \x01(\x0e\x32\x0b.MetricType:6\n\rstring_length\x12\x1d.google.protobuf.FieldOptions\x18\xed\xd4\x03 \x01(\r:/\n\x06\x66_must\x12\x1d.google.protobuf.FieldOptions\x18\xee\xd4\x03 \x01(\t:3\n\nordered_by\x12\x1d.google.protobuf.FieldOptions\x18\xef\xd4\x03 \x01(\t:5\n\x0chyperlink_to\x12\x1d.google.protobuf.FieldOptions\x18\xf0\xd4\x03 \x01(\t:8\n\x0fspecial_default\x12\x1d.google.protobuf.FieldOptions\x18\xf1\xd4\x03 \x01(\t:2\n\tf_typedef\x12\x1d.google.protobuf.FieldOptions\x18\xf2\xd4\x03 \x01(\t:3\n\nf_readonly\x12\x1d.google.protobuf.FieldOptions\x18\xf3\xd4\x03 \x01(\x08:7\n\x0e\x66_blob_message\x12\x1d.google.protobuf.FieldOptions\x18\xf4\xd4\x03 \x01(\x08::\n\x11\x64isp_hyperlink_to\x12\x1d.google.protobuf.FieldOptions\x18\xf5\xd4\x03 \x01(\t:4\n\x0b\x66_sensitive\x12\x1d.google.protobuf.FieldOptions\x18\xf6\xd4\x03 \x01(\x08:1\n\x08\x66_hidden\x12\x1d.google.protobuf.FieldOptions\x18\xf7\xd4\x03 \x01(\x08:;\n\x12\x66_skip_input_check\x12\x1d.google.protobuf.FieldOptions\x18\xf8\xd4\x03 \x01(\x08:7\n\x0e\x66_json_default\x12\x1d.google.protobuf.FieldOptions\x18\xf9\xd4\x03 \x01(\t:?\n\x16\x66_create_heat_resource\x12\x1d.google.protobuf.FieldOptions\x18\xfa\xd4\x03 \x01(\x08:4\n\x0b\x66_mandatory\x12\x1d.google.protobuf.FieldOptions\x18\xfb\xd4\x03 \x01(\x08:6\n\rdeprecated_in\x12\x1d.google.protobuf.FieldOptions\x18\xfc\xd4\x03 \x01(\t:6\n\rintroduced_in\x12\x1d.google.protobuf.FieldOptions\x18\xfd\xd4\x03 \x01(\t:4\n\x0b\x66_immutable\x12\x1d.google.protobuf.FieldOptions\x18\xfe\xd4\x03 \x01(\x08:3\n\nf_internal\x12\x1d.google.protobuf.FieldOptions\x18\xff\xd4\x03 \x01(\x08:9\n\x06\x61gg_op\x12\x1d.google.protobuf.FieldOptions\x18\xf1\xa2\x04 \x01(\x0e\x32\x08.PbAggOp:5\n\x0ctable_column\x12\x1d.google.protobuf.FieldOptions\x18\xf2\xa2\x04 \x01(\x08::\n\x11\x64isruptive_update\x12\x1d.google.protobuf.FieldOptions\x18\xf3\xa2\x04 \x01(\x08:W\n\x12metrics_hypervisor\x12\x1d.google.protobuf.FieldOptions\x18\xf4\xa2\x04 \x01(\x0b\x32\x1a.MetricsProviderHypervisor:0\n\x07sec_idx\x12\x1d.google.protobuf.FieldOptions\x18\xf5\xa2\x04 \x01(\t:B\n\taggregate\x12\x1d.google.protobuf.FieldOptions\x18\xf6\xa2\x04 \x01(\x0e\x32\x0e.AggregateType:S\n\x12metrics_derivation\x12\x1d.google.protobuf.FieldOptions\x18\xf7\xa2\x04 \x01(\x0b\x32\x16.MetricsDerivationData:C\n\x0cmetric_units\x12\x1d.google.protobuf.FieldOptions\x18\xf8\xa2\x04 \x01(\x0e\x32\x0c.MetricUnits:a\n\x18metrics_resp_latency_bkt\x12\x1d.google.protobuf.FieldOptions\x18\xf9\xa2\x04 \x01(\x0b\x32\x1e.MetricRespLatencyTimeInterval::\n\x11metrics_min_scale\x12\x1d.google.protobuf.FieldOptions\x18\xfa\xa2\x04 \x01(\x01:U\n\x13metrics_msg_handler\x12\x1d.google.protobuf.FieldOptions\x18\xfb\xa2\x04 \x01(\x0e\x32\x17.MetricsAgentMsgHandler:S\n\rmagg_function\x12\x1d.google.protobuf.FieldOptions\x18\xfc\xa2\x04 \x01(\x0e\x32\x1b.MetricsAggregationFunction:M\n\x12metrics_id_options\x12\x1d.google.protobuf.FieldOptions\x18\xfd\xa2\x04 \x01(\x0b\x32\x10.MetricIdOptions:R\n\x14metrics_rule_options\x12\x1d.google.protobuf.FieldOptions\x18\xfe\xa2\x04 \x01(\x0b\x32\x13.MetricsRuleOptions:3\n\nf_aci_skip\x12\x1d.google.protobuf.FieldOptions\x18\xff\xa2\x04 \x01(\x08:>\n\x15metric_max_check_skip\x12\x1d.google.protobuf.FieldOptions\x18\x80\xa3\x04 \x01(\x08:Y\n\x15m_anomalyzer_priority\x12\x1d.google.protobuf.FieldOptions\x18\x81\xa3\x04 \x01(\x0e\x32\x19.MetricAnomalyzerPriority:0\n\x07\x66_stdin\x12\x1d.google.protobuf.FieldOptions\x18\x82\xa3\x04 \x01(\x08:@\n\x17metrics_sum_agg_invalid\x12\x1d.google.protobuf.FieldOptions\x18\x83\xa3\x04 \x01(\x08:D\n\x1bmetrics_skip_inactivity_agg\x12\x1d.google.protobuf.FieldOptions\x18\x84\xa3\x04 \x01(\x08:9\n\x10\x66_cli_completion\x12\x1d.google.protobuf.FieldOptions\x18\x85\xa3\x04 \x01(\t:[\n\x17metrics_anomalyzer_opts\x12\x1d.google.protobuf.FieldOptions\x18\x86\xa3\x04 \x01(\x0b\x32\x19.MetricsAnomalyzerOptions:2\n\tdiff_skip\x12\x1d.google.protobuf.FieldOptions\x18\x87\xa3\x04 \x01(\x08:F\n\x0ese_metric_type\x12\x1d.google.protobuf.FieldOptions\x18\x88\xa3\x04 \x01(\x0e\x32\r.SeMetricType:3\n\ndeprecated\x12\x1d.google.protobuf.FieldOptions\x18\x89\xa3\x04 \x01(\x08:4\n\x0bhstree_node\x12\x1d.google.protobuf.FieldOptions\x18\xf9\xc9\x04 \x01(\x08:B\n\x19has_dominant_contributors\x12\x1d.google.protobuf.FieldOptions\x18\xfa\xc9\x04 \x01(\x08:6\n\rhstree_linkto\x12\x1d.google.protobuf.FieldOptions\x18\xfb\xc9\x04 \x01(\t:3\n\nhsval_enum\x12\x1d.google.protobuf.FieldOptions\x18\xfc\xc9\x04 \x01(\t::\n\x11hstree_combine_fn\x12\x1d.google.protobuf.FieldOptions\x18\xfd\xc9\x04 \x01(\t:1\n\x08sortable\x12\x1d.google.protobuf.FieldOptions\x18\x81\xf1\x04 \x01(\t:2\n\tgroupable\x12\x1d.google.protobuf.FieldOptions\x18\x82\xf1\x04 \x01(\t:1\n\x08xml_attr\x12\x1d.google.protobuf.FieldOptions\x18\x83\xf1\x04 \x01(\x08:C\n\x1apool_sharing_agg_sum_valid\x12\x1d.google.protobuf.FieldOptions\x18\x84\xf1\x04 \x01(\x08:X\n\x12magg_node_function\x12\x1d.google.protobuf.FieldOptions\x18\x85\xf1\x04 \x01(\x0e\x32\x1b.MetricsAggregationFunction:1\n\x04text\x12!.google.protobuf.EnumValueOptions\x18\xf1\xa2\x04 \x01(\t::\n\re_description\x12!.google.protobuf.EnumValueOptions\x18\xf2\xa2\x04 \x01(\t:7\n\nevent_desc\x12!.google.protobuf.EnumValueOptions\x18\xf3\xa2\x04 \x01(\t:K\n\nerror_type\x12!.google.protobuf.EnumValueOptions\x18\xf4\xa2\x04 \x01(\x0e\x32\x12.VinfraErrCategory:9\n\x0c\x65_format_str\x12!.google.protobuf.EnumValueOptions\x18\xf5\xa2\x04 \x01(\t::\n\re_format_func\x12!.google.protobuf.EnumValueOptions\x18\xf6\xa2\x04 \x01(\t:?\n\x12os_secgrp_protocol\x12!.google.protobuf.EnumValueOptions\x18\xf7\xa2\x04 \x01(\t::\n\revent_details\x12!.google.protobuf.EnumValueOptions\x18\xf8\xa2\x04 \x01(\t:9\n\x0c\x65vent_object\x12!.google.protobuf.EnumValueOptions\x18\xf9\xa2\x04 \x01(\t:O\n\x13sysev_alert_options\x12!.google.protobuf.EnumValueOptions\x18\xfa\xa2\x04 \x01(\x0b\x32\r.AlertOptions:;\n\x0e\x65vent_internal\x12!.google.protobuf.EnumValueOptions\x18\xfb\xa2\x04 \x01(\x08:5\n\x08http_ref\x12!.google.protobuf.EnumValueOptions\x18\xfc\xa2\x04 \x01(\t:<\n\x0f\x65vent_page_pool\x12!.google.protobuf.EnumValueOptions\x18\xfd\xa2\x04 \x01(\x08::\n\revent_page_vs\x12!.google.protobuf.EnumValueOptions\x18\xfe\xa2\x04 \x01(\x08::\n\revent_page_se\x12!.google.protobuf.EnumValueOptions\x18\xff\xa2\x04 \x01(\x08:=\n\x10\x65vent_page_cntlr\x12!.google.protobuf.EnumValueOptions\x18\x80\xa3\x04 \x01(\x08:E\n\x18\x65vent_page_admin_account\x12!.google.protobuf.EnumValueOptions\x18\x81\xa3\x04 \x01(\x08:C\n\x16\x65vent_page_audit_trail\x12!.google.protobuf.EnumValueOptions\x18\x82\xa3\x04 \x01(\x08:;\n\x0e\x65vent_page_all\x12!.google.protobuf.EnumValueOptions\x18\x83\xa3\x04 \x01(\x08::\n\rgeneric_event\x12!.google.protobuf.EnumValueOptions\x18\x84\xa3\x04 \x01(\x08:A\n\x14ignore_event_details\x12!.google.protobuf.EnumValueOptions\x18\x85\xa3\x04 \x01(\x08:Z\n\x16metrics_indexes_option\x12!.google.protobuf.EnumValueOptions\x18\x86\xa3\x04 \x01(\x0b\x32\x15.MetricsIndexesOption:=\n\x10\x65_recommendation\x12!.google.protobuf.EnumValueOptions\x18\x87\xa3\x04 \x01(\t:<\n\x0f\x65vent_desc_func\x12!.google.protobuf.EnumValueOptions\x18\x88\xa3\x04 \x01(\t:<\n\x0fssl_performance\x12!.google.protobuf.EnumValueOptions\x18\x89\xa3\x04 \x01(\t:>\n\x11ssl_compatibility\x12!.google.protobuf.EnumValueOptions\x18\x8a\xa3\x04 \x01(\t:9\n\x0cssl_security\x12!.google.protobuf.EnumValueOptions\x18\x8b\xa3\x04 \x01(\t:?\n\x12ssl_security_score\x12!.google.protobuf.EnumValueOptions\x18\x8f\xa3\x04 \x01(\x01:>\n\x11is_security_event\x12!.google.protobuf.EnumValueOptions\x18\x8c\xa3\x04 \x01(\x08:;\n\x0e\x63\x61tegory_title\x12!.google.protobuf.EnumValueOptions\x18\x8d\xa3\x04 \x01(\t:>\n\x11\x64os_event_id_name\x12!.google.protobuf.EnumValueOptions\x18\x8e\xa3\x04 \x01(\t:8\n\x0bssl_tls_1_0\x12!.google.protobuf.EnumValueOptions\x18\x90\xa3\x04 \x01(\x08:8\n\x0bssl_tls_1_1\x12!.google.protobuf.EnumValueOptions\x18\x91\xa3\x04 \x01(\x08:8\n\x0bssl_tls_1_2\x12!.google.protobuf.EnumValueOptions\x18\x92\xa3\x04 \x01(\x08::\n\revent_verbose\x12!.google.protobuf.EnumValueOptions\x18\x93\xa3\x04 \x01(\t:M\n\x0f\x61ttack_category\x12!.google.protobuf.EnumValueOptions\x18\x94\xa3\x04 \x01(\x0e\x32\x0f.AttackCategory:R\n\x12\x63loud_type_options\x12!.google.protobuf.EnumValueOptions\x18\x95\xa3\x04 \x01(\x0b\x32\x11.CloudTypeOptions:4\n\tm_typedef\x12\x1f.google.protobuf.MessageOptions\x18\xe1\xd4\x03 \x01(\t:2\n\x07m_union\x12\x1f.google.protobuf.MessageOptions\x18\xe2\xd4\x03 \x01(\x08:.\n\x03key\x12\x1f.google.protobuf.MessageOptions\x18\xe3\xd4\x03 \x01(\t:1\n\x06unique\x12\x1f.google.protobuf.MessageOptions\x18\xe4\xd4\x03 \x01(\t:8\n\x07submode\x12\x1f.google.protobuf.MessageOptions\x18\xe5\xd4\x03 \x01(\x08:\x04true:1\n\x06m_must\x12\x1f.google.protobuf.MessageOptions\x18\xe6\xd4\x03 \x01(\t:6\n\x0bm_transform\x12\x1f.google.protobuf.MessageOptions\x18\xe7\xd4\x03 \x01(\t:4\n\tm_default\x12\x1f.google.protobuf.MessageOptions\x18\xe8\xd4\x03 \x01(\t:A\n\x16m_blob_nested_messages\x12\x1f.google.protobuf.MessageOptions\x18\xe9\xd4\x03 \x01(\x08:4\n\tm_resolve\x12\x1f.google.protobuf.MessageOptions\x18\xea\xd4\x03 \x01(\t:0\n\x05m_pre\x12\x1f.google.protobuf.MessageOptions\x18\xeb\xd4\x03 \x01(\t:;\n\x10m_optional_check\x12\x1f.google.protobuf.MessageOptions\x18\xec\xd4\x03 \x01(\t:7\n\x0cmessage_root\x12\x1f.google.protobuf.MessageOptions\x18\xf1\xa2\x04 \x01(\x08::\n\x0f\x64\x62_notification\x12\x1f.google.protobuf.MessageOptions\x18\xf2\xa2\x04 \x01(\x08:K\n\x0fmetrics_options\x12\x1f.google.protobuf.MessageOptions\x18\xf3\xa2\x04 \x01(\x0b\x32\x0f.MetricsOptions:<\n\x11metrics_rolled_up\x12\x1f.google.protobuf.MessageOptions\x18\xf4\xa2\x04 \x01(\x08:7\n\x0cm_format_str\x12\x1f.google.protobuf.MessageOptions\x18\xf5\xa2\x04 \x01(\t:8\n\rm_format_func\x12\x1f.google.protobuf.MessageOptions\x18\xf6\xa2\x04 \x01(\t:5\n\nm_aci_skip\x12\x1f.google.protobuf.MessageOptions\x18\xf7\xa2\x04 \x01(\x08:J\n\x10m_aci_schema_tag\x12\x1f.google.protobuf.MessageOptions\x18\xf8\xa2\x04 \x01(\x0e\x32\r.AciSchemaTag:M\n\x0emetrics_entity\x12\x1f.google.protobuf.MessageOptions\x18\xf9\xa2\x04 \x01(\x0e\x32\x12.MetricsEntityType:S\n\x12\x65v_details_options\x12\x1f.google.protobuf.MessageOptions\x18\xfa\xa2\x04 \x01(\x0e\x32\x14.EventDetailsOptions:B\n\x17\x64\x62_notification_special\x12\x1f.google.protobuf.MessageOptions\x18\xfb\xa2\x04 \x01(\x08:F\n\x1b\x64\x62_notification_select_only\x12\x1f.google.protobuf.MessageOptions\x18\xfc\xa2\x04 \x01(\x08:C\n\x18\x62\x61se_obj_db_notification\x12\x1f.google.protobuf.MessageOptions\x18\xfd\xa2\x04 \x01(\x08:7\n\x0cm_skip_cache\x12\x1f.google.protobuf.MessageOptions\x18\xfe\xa2\x04 \x01(\x08:6\n\x0bm_heat_skip\x12\x1f.google.protobuf.MessageOptions\x18\xff\xa2\x04 \x01(\x08:;\n\x10m_skip_datastore\x12\x1f.google.protobuf.MessageOptions\x18\x80\xa3\x04 \x01(\x08:I\n\x1em_skip_db2datastore_references\x12\x1f.google.protobuf.MessageOptions\x18\x81\xa3\x04 \x01(\x08\x42\x1d\n\x18\x63om.avinetworks.protobuf\x88\x01\x01')
  ,
  dependencies=[google_dot_protobuf_dot_descriptor__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_COMPARISONOPERATOR = _descriptor.EnumDescriptor(
  name='ComparisonOperator',
  full_name='ComparisonOperator',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CO_EQ', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CO_GT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CO_GE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CO_LT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CO_LE', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CO_NE', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3313,
  serialized_end=3399,
)
_sym_db.RegisterEnumDescriptor(_COMPARISONOPERATOR)

ComparisonOperator = enum_type_wrapper.EnumTypeWrapper(_COMPARISONOPERATOR)
_METRICPERIOD = _descriptor.EnumDescriptor(
  name='MetricPeriod',
  full_name='MetricPeriod',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRIC_PERIOD_UNDEF', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_PERIOD_1SECOND', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_PERIOD_5SECOND', index=2, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_PERIOD_1MINUTE', index=3, number=60,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_PERIOD_5MINUTE', index=4, number=300,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_PERIOD_1HOUR', index=5, number=3600,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_PERIOD_2HOUR', index=6, number=7200,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_PERIOD_1DAY', index=7, number=86400,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_PERIOD_1WEEK', index=8, number=604800,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_PERIOD_1MONTH', index=9, number=2592000,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_PERIOD_1YEAR', index=10, number=31556925,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3402,
  serialized_end=3712,
)
_sym_db.RegisterEnumDescriptor(_METRICPERIOD)

MetricPeriod = enum_type_wrapper.EnumTypeWrapper(_METRICPERIOD)
_METRICTYPE = _descriptor.EnumDescriptor(
  name='MetricType',
  full_name='MetricType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ABSOLUTE', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GAUGE', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COUNTER', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DERIVED', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3714,
  serialized_end=3777,
)
_sym_db.RegisterEnumDescriptor(_METRICTYPE)

MetricType = enum_type_wrapper.EnumTypeWrapper(_METRICTYPE)
_SEMETRICTYPE = _descriptor.EnumDescriptor(
  name='SeMetricType',
  full_name='SeMetricType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SE_MTYPE_ABSOLUTE', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SE_MTYPE_GAUGE', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3779,
  serialized_end=3836,
)
_sym_db.RegisterEnumDescriptor(_SEMETRICTYPE)

SeMetricType = enum_type_wrapper.EnumTypeWrapper(_SEMETRICTYPE)
_METRICSDERIVATIONFN = _descriptor.EnumDescriptor(
  name='MetricsDerivationFn',
  full_name='MetricsDerivationFn',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRICS_ALIAS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_FIRST_N_DIVIDE_BY_LAST', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_BW_GAUGE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_GET_POST_OTHER_LATENCY', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='APPDEX_ON_3_BUCKETS', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='APPDEX_ON_4_BUCKETS', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_GAUGE', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_N_METRICS', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='APPDEX_ON_5_BUCKETS', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='APPDEX_ON_6_BUCKETS', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='APPDEX_ON_CONNECTIONS', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='APPDEX_ON_2_BUCKETS', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_CLIENT_LATENCY', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_APPLICATION_LATENCY', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIN_N_METRICS', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_FIRST_N_DIVIDE_BY_LAST_PERCENTAGE', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='L4_CONNECTION_ERROR_PERCENTAGE', index=16, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_L4_CLIENT_LATENCY', index=17, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHECK_FOR_TRANSITIONS', index=18, number=18,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUBSTRACT_ALL_FROM_FIRST', index=19, number=19,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_N_OVER_TIME_PERIOD', index=20, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_NAVIGATION_TIMING', index=21, number=21,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_RUM_VISITS', index=22, number=22,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PCT_SSL_ERROR_CONNECTIONS', index=23, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_RESPONSE_TIME', index=24, number=24,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_RATES_FIRST_N_DIVIDE_BY_LAST', index=25, number=25,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_RATES_FIRST_N_DIVIDE_BY_LAST_PERCENTAGE', index=26, number=26,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PCT_CACHE_METRICS', index=27, number=27,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_FIRST_N_DIVIDE_BY_SECLAST_EXCL_ERROR_RATE', index=28, number=28,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_FIRST_N_SUBSTRACT_LAST', index=29, number=29,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_POOL_METRICS', index=30, number=30,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_POOL_BW', index=31, number=31,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_BY_SUBSTRACT_ALL_FROM_FIRST_OVER_TIME', index=32, number=32,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_RSA_PFS', index=33, number=33,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EVAL_FN', index=34, number=34,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SSL_PROTOCOL_INDICATOR', index=35, number=35,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUM_FIRST_N_DIVIDE_BY_SECLAST_RATE_EXCL_ERROR_RATE', index=36, number=36,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUBSTRACT_ALL_FROM_FIRST_WITH_FLOOR_ZERO', index=37, number=37,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVAILABLE_CAPACITY', index=38, number=38,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONNECTION_SATURATION', index=39, number=39,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AVG_RSA_NON_PFS', index=40, number=40,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SSL_HANDSHAKES_NONPFS', index=41, number=41,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DYN_MEM_USAGE', index=42, number=42,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FIRST_DIVIDE_BY_DIFFERENCE_OF_SECOND_AND_THIRD', index=43, number=43,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3839,
  serialized_end=5120,
)
_sym_db.RegisterEnumDescriptor(_METRICSDERIVATIONFN)

MetricsDerivationFn = enum_type_wrapper.EnumTypeWrapper(_METRICSDERIVATIONFN)
_METRICUNITS = _descriptor.EnumDescriptor(
  name='MetricUnits',
  full_name='MetricUnits',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRIC_COUNT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BITS_PER_SECOND', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MILLISECONDS', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SECONDS', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PER_SECOND', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BYTES', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PERCENT', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KILO_BYTES', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KILO_BYTES_PER_SECOND', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BYTES_PER_SECOND', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KILO_BITS_PER_SECOND', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GIGA_BYTES', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MEGA_BYTES', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NORMALIZED', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRING', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SEC', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIN', index=16, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DAYS', index=17, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KB', index=18, number=18,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MB', index=19, number=19,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GB', index=20, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MBPS', index=21, number=21,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GHZ', index=22, number=22,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RATIO', index=23, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WORD', index=24, number=24,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MICROSECONDS', index=25, number=25,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HEALTH', index=26, number=26,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=5123,
  serialized_end=5519,
)
_sym_db.RegisterEnumDescriptor(_METRICUNITS)

MetricUnits = enum_type_wrapper.EnumTypeWrapper(_METRICUNITS)
_METRICSRULETYPE = _descriptor.EnumDescriptor(
  name='MetricsRuleType',
  full_name='MetricsRuleType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='GENERATE_EVENT_WITH_LOW_WM', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GENERATE_EVENT_FOR_ANOMALY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GENERATE_EVENT_WITH_HIGH_WM', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=5521,
  serialized_end=5635,
)
_sym_db.RegisterEnumDescriptor(_METRICSRULETYPE)

MetricsRuleType = enum_type_wrapper.EnumTypeWrapper(_METRICSRULETYPE)
_PBAGGOP = _descriptor.EnumDescriptor(
  name='PbAggOp',
  full_name='PbAggOp',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AGG_SUM', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AGG_MAX', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AGG_MIN', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AGG_ANY', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AGG_SUM_ANY', index=4, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=5637,
  serialized_end=5715,
)
_sym_db.RegisterEnumDescriptor(_PBAGGOP)

PbAggOp = enum_type_wrapper.EnumTypeWrapper(_PBAGGOP)
_VINFRAERRCATEGORY = _descriptor.EnumDescriptor(
  name='VinfraErrCategory',
  full_name='VinfraErrCategory',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VINFRA_RECOVERABLE', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VINFRA_NON_RECOVERABLE', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=5717,
  serialized_end=5788,
)
_sym_db.RegisterEnumDescriptor(_VINFRAERRCATEGORY)

VinfraErrCategory = enum_type_wrapper.EnumTypeWrapper(_VINFRAERRCATEGORY)
_METRICRESPLATENCYTIME = _descriptor.EnumDescriptor(
  name='MetricRespLatencyTime',
  full_name='MetricRespLatencyTime',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRIC_RESP_TIME_0', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_RESP_TIME_400', index=1, number=400,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_RESP_TIME_500', index=2, number=500,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_RESP_TIME_1600', index=3, number=1600,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_RESP_TIME_2000', index=4, number=2000,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=5791,
  serialized_end=5948,
)
_sym_db.RegisterEnumDescriptor(_METRICRESPLATENCYTIME)

MetricRespLatencyTime = enum_type_wrapper.EnumTypeWrapper(_METRICRESPLATENCYTIME)
_METRICSAGGREGATIONENUM = _descriptor.EnumDescriptor(
  name='MetricsAggregationEnum',
  full_name='MetricsAggregationEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRICS_AGG_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_AGG_NODE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_AGG_POOL', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_AGG_SERVER', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_AGG_NODE_POOL', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_AGG_NODE_SERVER', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_AGG_POOL_SERVER', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_AGG_NODE_POOL_SERVER', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_AGG_SERVICE', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_AGG_NODE_SERVICE', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_AGG_DIMENSIONID', index=10, number=10,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=5951,
  serialized_end=6268,
)
_sym_db.RegisterEnumDescriptor(_METRICSAGGREGATIONENUM)

MetricsAggregationEnum = enum_type_wrapper.EnumTypeWrapper(_METRICSAGGREGATIONENUM)
_METRICSOBJTYPE = _descriptor.EnumDescriptor(
  name='MetricsObjType',
  full_name='MetricsObjType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRICS_OBJ_TYPE_UNKNOWN', index=0, number=100,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VSERVER_L4_SERVER', index=1, number=101,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VSERVER_L4_CLIENT', index=2, number=102,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VSERVER_L7_SERVER', index=3, number=103,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VSERVER_L7_CLIENT', index=4, number=104,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VM_METRICS_OBJ', index=5, number=105,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SE_METRICS_OBJ', index=6, number=107,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VSERVER_RUM', index=7, number=108,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONTROLLER_METRICS_OBJ', index=8, number=109,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_COLLECTION', index=9, number=110,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RUM_PREAGG_BROWSER_OBJ', index=10, number=111,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RUM_PREAGG_COUNTRY_OBJ', index=11, number=112,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RUM_PREAGG_DEVTYPE_OBJ', index=12, number=113,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RUM_PREAGG_LANG_OBJ', index=13, number=114,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RUM_PREAGG_OS_OBJ', index=14, number=115,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RUM_PREAGG_URL_OBJ', index=15, number=116,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_ANOMALY_OBJ', index=16, number=117,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_HEALTHSCORE_OBJ', index=17, number=118,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RESOURCE_TIMING_BROWSER_OBJ', index=18, number=119,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RESOURCE_TIMING_OS_OBJ', index=19, number=120,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RESOURCE_TIMING_COUNTRY_OBJ', index=20, number=121,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RESOURCE_TIMING_LANG_OBJ', index=21, number=122,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RESOURCE_TIMING_DEVTYPE_OBJ', index=22, number=123,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RESOURCE_TIMING_URL_OBJ', index=23, number=124,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RESOURCE_TIMING_DIMENSION_OBJ', index=24, number=125,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RESOURCE_TIMING_BLOB_OBJ', index=25, number=126,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DOS_OBJ', index=26, number=127,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_RUM_PREAGG_IPGROUP_OBJ', index=27, number=128,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_APP_INSIGHTS_OBJ', index=28, number=129,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_VSERVER_DNS_OBJ', index=29, number=130,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_SERVER_DNS_OBJ', index=30, number=131,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_SERVICE_INSIGHTS_OBJ', index=31, number=132,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_SOURCE_INSIGHTS_OBJ', index=32, number=133,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TENANT_STATS_OBJ', index=33, number=134,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_SE_IF_STATS_OBJ', index=34, number=135,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_USER_METRICS_OBJ', index=35, number=136,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_WAF_GROUP_OBJ', index=36, number=137,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_WAF_RULE_OBJ', index=37, number=138,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_WAF_TAG_OBJ', index=38, number=139,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_PROCESS_STATS_OBJ', index=39, number=140,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=6271,
  serialized_end=7513,
)
_sym_db.RegisterEnumDescriptor(_METRICSOBJTYPE)

MetricsObjType = enum_type_wrapper.EnumTypeWrapper(_METRICSOBJTYPE)
_AGGREGATETYPE = _descriptor.EnumDescriptor(
  name='AggregateType',
  full_name='AggregateType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AGGREGATE_TYPE_ALL', index=0, number=100,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AGGREGATE_TYPE_FIRST', index=1, number=101,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AGGREGATE_TYPE_PRIMARY_KEY_IP_PORT', index=2, number=103,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AGGREGATE_TYPE_TS_EARLIEST', index=3, number=104,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AGGREGATE_TYPE_TS_LATEST', index=4, number=105,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7516,
  serialized_end=7683,
)
_sym_db.RegisterEnumDescriptor(_AGGREGATETYPE)

AggregateType = enum_type_wrapper.EnumTypeWrapper(_AGGREGATETYPE)
_METRICSINDEXES = _descriptor.EnumDescriptor(
  name='MetricsIndexes',
  full_name='MetricsIndexes',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRIC_TIMESTAMP', index=0, number=1,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\013\262\230\"\002\030\000\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_PERIOD', index=1, number=2,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\010\262\230\"\r:\013period_type\262\230\"\002\030\000\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POOL_KEY', index=2, number=3,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0252\023pool_table.pool_key\262\230\"\002 \001\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OBJ_KEY', index=3, number=4,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0232\021obj_table.obj_key\262\230\"\002 \001\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENTITY_KEY', index=4, number=5,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0312\027entity_table.entity_key\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NODE_KEY', index=5, number=6,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0252\023node_table.node_key\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COUNTRY_KEY', index=6, number=7,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0332\031country_table.country_key\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OS_KEY', index=7, number=8,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0212\017os_table.os_key\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='URL_KEY', index=8, number=9,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0232\021url_table.url_key\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DEVTYPE_KEY', index=9, number=10,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0332\031devtype_table.devtype_key\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LANG_KEY', index=10, number=11,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0252\023lang_table.lang_key\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BROWSER_KEY', index=11, number=12,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0332\031browser_table.browser_key\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TIMESTAMP', index=12, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OBJ_TYPE', index=13, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_RUM_SAMPLE_TYPE', index=14, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRIC_ID', index=15, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PRIORITY', index=16, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CI_SRC_TYPE', index=17, number=18,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\020\010\262\230\"\025:\023metrics_ci_src_type')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BLOB_KEY', index=18, number=19,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IPGROUP_KEY', index=19, number=20,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0332\031ipgroup_table.ipgroup_key\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TENANT_KEY', index=20, number=21,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0312\027tenant_table.tenant_key\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENTITY_TYPE', index=21, number=22,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\010\262\230\"\016:\014entity_types\262\230\"\002\030\000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATTACK_KEY', index=22, number=23,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0312\027attack_table.attack_key\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIMENSIONID_KEY', index=23, number=24,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"#2!dimensionid_table.dimensionid_key\262\230\"\002\030\000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DIMENSION', index=24, number=25,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\010\262\230\"\031:\027metrics_dimension_types\262\230\"\002\030\000\262\230\"\002(\001')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASN_KEY', index=25, number=26,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0232\021asn_table.asn_key\262\230\"\002 \000\262\230\"\002(\001')),
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7686,
  serialized_end=9232,
)
_sym_db.RegisterEnumDescriptor(_METRICSINDEXES)

MetricsIndexes = enum_type_wrapper.EnumTypeWrapper(_METRICSINDEXES)
_METRICSDIMENSION = _descriptor.EnumDescriptor(
  name='MetricsDimension',
  full_name='MetricsDimension',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRICS_DIMENSION_METRIC_TIMESTAMP', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DIMENSION_COUNTRY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DIMENSION_OS', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DIMENSION_URL', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DIMENSION_DEVTYPE', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DIMENSION_LANG', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DIMENSION_BROWSER', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DIMENSION_IPGROUP', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DIMENSION_ATTACK', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DIMENSION_ASN', index=9, number=9,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=9235,
  serialized_end=9555,
)
_sym_db.RegisterEnumDescriptor(_METRICSDIMENSION)

MetricsDimension = enum_type_wrapper.EnumTypeWrapper(_METRICSDIMENSION)
_METRICSDBTABLEARCHIVEPOLICY = _descriptor.EnumDescriptor(
  name='MetricsDbTableArchivePolicy',
  full_name='MetricsDbTableArchivePolicy',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRICS_DB_TABLE_ARCHIVE_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DB_TABLE_ARCHIVE_ALL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DB_TABLE_ARCHIVE_HIGHEST', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DB_TABLE_ARCHIVE_LOWEST', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DB_TABLE_ARCHIVE_DAY', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DB_TABLE_ARCHIVE_DAY_WEEK', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_DB_TABLE_ARCHIVE_DAY_YEAR', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=9558,
  serialized_end=9843,
)
_sym_db.RegisterEnumDescriptor(_METRICSDBTABLEARCHIVEPOLICY)

MetricsDbTableArchivePolicy = enum_type_wrapper.EnumTypeWrapper(_METRICSDBTABLEARCHIVEPOLICY)
_METRICSTABLEID = _descriptor.EnumDescriptor(
  name='MetricsTableId',
  full_name='MetricsTableId',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_ANOMALY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_CONTROLLER_STATS', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_HEALTH_SCORE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_SE_STATS', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_VSERVER_L4_SERVER', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_VSERVER_L4_CLIENT', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_VSERVER_L7_CLIENT', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_VSERVER_L7_SERVER', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_RUM_PREAGG_BROWSER', index=9, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_RUM_PREAGG_COUNTRY', index=10, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_RUM_PREAGG_DEVTYPE', index=11, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_RUM_PREAGG_LANG', index=12, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_RUM_PREAGG_OS', index=13, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_RUM_PREAGG_URL', index=14, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_RUM_ANALYTICS', index=15, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_VM_STATS', index=16, number=23,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_RESOURCE_TIMING_DIM', index=17, number=24,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_RESOURCE_TIMING_BLOB', index=18, number=25,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_RUM_PREAGG_IPGROUP', index=19, number=26,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_DOS_ANALYTICS', index=20, number=27,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_APP_INSIGHTS', index=21, number=28,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_VSERVER_DNS', index=22, number=29,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_SERVER_DNS', index=23, number=30,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_SERVICE_INSIGHTS', index=24, number=31,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_SOURCE_INSIGHTS', index=25, number=32,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_TENANT_STATS', index=26, number=33,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_SE_IF_STATS', index=27, number=34,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_USER_METRICS', index=28, number=35,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_WAF_GROUP', index=29, number=36,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_WAF_TAG', index=30, number=37,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_WAF_RULE', index=31, number=38,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_TABLE_PROCESS_STATS', index=32, number=39,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=9846,
  serialized_end=10960,
)
_sym_db.RegisterEnumDescriptor(_METRICSTABLEID)

MetricsTableId = enum_type_wrapper.EnumTypeWrapper(_METRICSTABLEID)
_ANOMALYMODELS = _descriptor.EnumDescriptor(
  name='AnomalyModels',
  full_name='AnomalyModels',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EXPONENTIAL_MOVING_AVG', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXPONENTIAL_WEIGHTED_MOVING_AVG', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HOLTWINTERS_AT_AS', index=2, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HOLTWINTERS_AT_MS', index=3, number=8,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=10962,
  serialized_end=11088,
)
_sym_db.RegisterEnumDescriptor(_ANOMALYMODELS)

AnomalyModels = enum_type_wrapper.EnumTypeWrapper(_ANOMALYMODELS)
_ANOMALYINTERPRETATION = _descriptor.EnumDescriptor(
  name='AnomalyInterpretation',
  full_name='AnomalyInterpretation',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='COMBINE_MODELS_ALL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMBINE_MODELS_ANY', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=11090,
  serialized_end=11161,
)
_sym_db.RegisterEnumDescriptor(_ANOMALYINTERPRETATION)

AnomalyInterpretation = enum_type_wrapper.EnumTypeWrapper(_ANOMALYINTERPRETATION)
_ATTACKCATEGORY = _descriptor.EnumDescriptor(
  name='AttackCategory',
  full_name='AttackCategory',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VOLUMETRIC', index=0, number=0,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\222\227\"/Class of attacks which are volumetric in nature')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NON_VOLUMETRIC', index=1, number=1,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\222\227\"?Class of attacks which are specifically non-volumetricin nature')),
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=11164,
  serialized_end=11338,
)
_sym_db.RegisterEnumDescriptor(_ATTACKCATEGORY)

AttackCategory = enum_type_wrapper.EnumTypeWrapper(_ATTACKCATEGORY)
_METRICSAGENTMSGHANDLER = _descriptor.EnumDescriptor(
  name='MetricsAgentMsgHandler',
  full_name='MetricsAgentMsgHandler',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRICS_HANDLER_LOCAL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_HANDLER_RUM', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_HANDLER_DDOS', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=11340,
  serialized_end=11442,
)
_sym_db.RegisterEnumDescriptor(_METRICSAGENTMSGHANDLER)

MetricsAgentMsgHandler = enum_type_wrapper.EnumTypeWrapper(_METRICSAGENTMSGHANDLER)
_METRICSAGGREGATIONFUNCTION = _descriptor.EnumDescriptor(
  name='MetricsAggregationFunction',
  full_name='MetricsAggregationFunction',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MAGG_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAGG_AVG', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAGG_SUM', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAGG_MAX', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAGG_MIN', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=11444,
  serialized_end=11543,
)
_sym_db.RegisterEnumDescriptor(_METRICSAGGREGATIONFUNCTION)

MetricsAggregationFunction = enum_type_wrapper.EnumTypeWrapper(_METRICSAGGREGATIONFUNCTION)
_ACISCHEMATAG = _descriptor.EnumDescriptor(
  name='AciSchemaTag',
  full_name='AciSchemaTag',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACI_MDEV', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACI_MDEVCFG', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACI_MFUNC_VSERVER', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=11545,
  serialized_end=11613,
)
_sym_db.RegisterEnumDescriptor(_ACISCHEMATAG)

AciSchemaTag = enum_type_wrapper.EnumTypeWrapper(_ACISCHEMATAG)
_METRICSENTITYTYPE = _descriptor.EnumDescriptor(
  name='MetricsEntityType',
  full_name='MetricsEntityType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VSERVER_METRICS_ENTITY', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VM_METRICS_ENTITY', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SE_METRICS_ENTITY', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONTROLLER_METRICS_ENTITY', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='APPLICATION_METRICS_ENTITY', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TENANT_METRICS_ENTITY', index=5, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=11616,
  serialized_end=11799,
)
_sym_db.RegisterEnumDescriptor(_METRICSENTITYTYPE)

MetricsEntityType = enum_type_wrapper.EnumTypeWrapper(_METRICSENTITYTYPE)
_METRICSDATAOBJIDTYPE = _descriptor.EnumDescriptor(
  name='MetricsDataObjIdType',
  full_name='MetricsDataObjIdType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='METRICS_OBJ_ID_TYPE_VIRTUALSERVICE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_OBJ_ID_TYPE_SERVER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_OBJ_ID_TYPE_POOL', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_OBJ_ID_TYPE_SERVICEENGINE', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_OBJ_ID_TYPE_VIRTUALMACHINE', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_OBJ_ID_TYPE_CONTROLLER', index=5, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_OBJ_ID_TYPE_TENANT', index=6, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_OBJ_ID_TYPE_CLUSTER', index=7, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='METRICS_OBJ_ID_TYPE_SE_INTERFACE', index=8, number=9,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=11802,
  serialized_end=12144,
)
_sym_db.RegisterEnumDescriptor(_METRICSDATAOBJIDTYPE)

MetricsDataObjIdType = enum_type_wrapper.EnumTypeWrapper(_METRICSDATAOBJIDTYPE)
_METRICANOMALYZERPRIORITY = _descriptor.EnumDescriptor(
  name='MetricAnomalyzerPriority',
  full_name='MetricAnomalyzerPriority',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='M_ANOMALYZER_HIGH', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='M_ANOMALYZER_MEDIUM', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='M_ANOMALYZER_LOW', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='M_ANOMALYZER_NONE', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=12146,
  serialized_end=12265,
)
_sym_db.RegisterEnumDescriptor(_METRICANOMALYZERPRIORITY)

MetricAnomalyzerPriority = enum_type_wrapper.EnumTypeWrapper(_METRICANOMALYZERPRIORITY)
_EVENTDETAILSOPTIONS = _descriptor.EnumDescriptor(
  name='EventDetailsOptions',
  full_name='EventDetailsOptions',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EVENT_DETAILS_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EVENT_DETAILS_INCLUDE_SUMMARY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EVENT_DETAILS_ONLY_SUMMARY', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=12267,
  serialized_end=12379,
)
_sym_db.RegisterEnumDescriptor(_EVENTDETAILSOPTIONS)

EventDetailsOptions = enum_type_wrapper.EnumTypeWrapper(_EVENTDETAILSOPTIONS)
_ALERTLEVEL = _descriptor.EnumDescriptor(
  name='AlertLevel',
  full_name='AlertLevel',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ALERT_LOW', index=0, number=1,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\227\"\003Low')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALERT_MEDIUM', index=1, number=2,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\227\"\006Medium')),
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALERT_HIGH', index=2, number=3,
      options=_descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\227\"\004High')),
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=12381,
  serialized_end=12473,
)
_sym_db.RegisterEnumDescriptor(_ALERTLEVEL)

AlertLevel = enum_type_wrapper.EnumTypeWrapper(_ALERTLEVEL)
_ALERTACTIONGROUPDEFAULTS = _descriptor.EnumDescriptor(
  name='AlertActionGroupDefaults',
  full_name='AlertActionGroupDefaults',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACTIONGROUP_LOW', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIONGROUP_MEDIUM', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIONGROUP_HIGH', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIONGROUP_SYSLOG_ALL', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIONGROUP_SYSLOG_CONFIG', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIONGROUP_SYSLOG_SYSTEM', index=5, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=12476,
  serialized_end=12659,
)
_sym_db.RegisterEnumDescriptor(_ALERTACTIONGROUPDEFAULTS)

AlertActionGroupDefaults = enum_type_wrapper.EnumTypeWrapper(_ALERTACTIONGROUPDEFAULTS)
_ALERTCONFIGSCOPE = _descriptor.EnumDescriptor(
  name='AlertConfigScope',
  full_name='AlertConfigScope',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ALERT_CONFIG_SCOPE_TENANT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALERT_CONFIG_SCOPE_ADMIN', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=12661,
  serialized_end=12740,
)
_sym_db.RegisterEnumDescriptor(_ALERTCONFIGSCOPE)

AlertConfigScope = enum_type_wrapper.EnumTypeWrapper(_ALERTCONFIGSCOPE)
_IPADDRTYPE = _descriptor.EnumDescriptor(
  name='IpAddrType',
  full_name='IpAddrType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='V4', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DNS', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=12742,
  serialized_end=12771,
)
_sym_db.RegisterEnumDescriptor(_IPADDRTYPE)

IpAddrType = enum_type_wrapper.EnumTypeWrapper(_IPADDRTYPE)
_LICENSETIERTYPE = _descriptor.EnumDescriptor(
  name='LicenseTierType',
  full_name='LicenseTierType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ENTERPRISE_16', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENTERPRISE_18', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=12773,
  serialized_end=12828,
)
_sym_db.RegisterEnumDescriptor(_LICENSETIERTYPE)

LicenseTierType = enum_type_wrapper.EnumTypeWrapper(_LICENSETIERTYPE)
_LICENSETYPE = _descriptor.EnumDescriptor(
  name='LicenseType',
  full_name='LicenseType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LIC_BACKEND_SERVERS', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LIC_SOCKETS', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LIC_CORES', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LIC_HOSTS', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LIC_SE_BANDWIDTH', index=4, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=12830,
  serialized_end=12937,
)
_sym_db.RegisterEnumDescriptor(_LICENSETYPE)

LicenseType = enum_type_wrapper.EnumTypeWrapper(_LICENSETYPE)
CO_EQ = 0
CO_GT = 1
CO_GE = 2
CO_LT = 3
CO_LE = 4
CO_NE = 5
METRIC_PERIOD_UNDEF = 0
METRIC_PERIOD_1SECOND = 1
METRIC_PERIOD_5SECOND = 5
METRIC_PERIOD_1MINUTE = 60
METRIC_PERIOD_5MINUTE = 300
METRIC_PERIOD_1HOUR = 3600
METRIC_PERIOD_2HOUR = 7200
METRIC_PERIOD_1DAY = 86400
METRIC_PERIOD_1WEEK = 604800
METRIC_PERIOD_1MONTH = 2592000
METRIC_PERIOD_1YEAR = 31556925
ABSOLUTE = 1
GAUGE = 2
COUNTER = 3
DERIVED = 4
SE_MTYPE_ABSOLUTE = 1
SE_MTYPE_GAUGE = 2
METRICS_ALIAS = 0
SUM_FIRST_N_DIVIDE_BY_LAST = 1
SUM_BW_GAUGE = 2
AVG_GET_POST_OTHER_LATENCY = 3
APPDEX_ON_3_BUCKETS = 4
APPDEX_ON_4_BUCKETS = 5
SUM_GAUGE = 6
SUM_N_METRICS = 7
APPDEX_ON_5_BUCKETS = 8
APPDEX_ON_6_BUCKETS = 9
APPDEX_ON_CONNECTIONS = 10
APPDEX_ON_2_BUCKETS = 11
AVG_CLIENT_LATENCY = 12
AVG_APPLICATION_LATENCY = 13
MIN_N_METRICS = 14
SUM_FIRST_N_DIVIDE_BY_LAST_PERCENTAGE = 15
L4_CONNECTION_ERROR_PERCENTAGE = 16
AVG_L4_CLIENT_LATENCY = 17
CHECK_FOR_TRANSITIONS = 18
SUBSTRACT_ALL_FROM_FIRST = 19
AVG_N_OVER_TIME_PERIOD = 20
AVG_NAVIGATION_TIMING = 21
AVG_RUM_VISITS = 22
PCT_SSL_ERROR_CONNECTIONS = 23
AVG_RESPONSE_TIME = 24
SUM_RATES_FIRST_N_DIVIDE_BY_LAST = 25
SUM_RATES_FIRST_N_DIVIDE_BY_LAST_PERCENTAGE = 26
PCT_CACHE_METRICS = 27
SUM_FIRST_N_DIVIDE_BY_SECLAST_EXCL_ERROR_RATE = 28
SUM_FIRST_N_SUBSTRACT_LAST = 29
AVG_POOL_METRICS = 30
AVG_POOL_BW = 31
AVG_BY_SUBSTRACT_ALL_FROM_FIRST_OVER_TIME = 32
AVG_RSA_PFS = 33
EVAL_FN = 34
SSL_PROTOCOL_INDICATOR = 35
SUM_FIRST_N_DIVIDE_BY_SECLAST_RATE_EXCL_ERROR_RATE = 36
SUBSTRACT_ALL_FROM_FIRST_WITH_FLOOR_ZERO = 37
AVAILABLE_CAPACITY = 38
CONNECTION_SATURATION = 39
AVG_RSA_NON_PFS = 40
SSL_HANDSHAKES_NONPFS = 41
DYN_MEM_USAGE = 42
FIRST_DIVIDE_BY_DIFFERENCE_OF_SECOND_AND_THIRD = 43
METRIC_COUNT = 0
BITS_PER_SECOND = 1
MILLISECONDS = 2
SECONDS = 3
PER_SECOND = 4
BYTES = 5
PERCENT = 6
KILO_BYTES = 7
KILO_BYTES_PER_SECOND = 8
BYTES_PER_SECOND = 9
KILO_BITS_PER_SECOND = 10
GIGA_BYTES = 11
MEGA_BYTES = 12
NORMALIZED = 13
STRING = 14
SEC = 15
MIN = 16
DAYS = 17
KB = 18
MB = 19
GB = 20
MBPS = 21
GHZ = 22
RATIO = 23
WORD = 24
MICROSECONDS = 25
HEALTH = 26
GENERATE_EVENT_WITH_LOW_WM = 0
GENERATE_EVENT_FOR_ANOMALY = 1
GENERATE_EVENT_WITH_HIGH_WM = 2
AGG_SUM = 1
AGG_MAX = 2
AGG_MIN = 3
AGG_ANY = 4
AGG_SUM_ANY = 5
VINFRA_RECOVERABLE = 1
VINFRA_NON_RECOVERABLE = 2
METRIC_RESP_TIME_0 = 0
METRIC_RESP_TIME_400 = 400
METRIC_RESP_TIME_500 = 500
METRIC_RESP_TIME_1600 = 1600
METRIC_RESP_TIME_2000 = 2000
METRICS_AGG_NONE = 0
METRICS_AGG_NODE = 1
METRICS_AGG_POOL = 2
METRICS_AGG_SERVER = 3
METRICS_AGG_NODE_POOL = 4
METRICS_AGG_NODE_SERVER = 5
METRICS_AGG_POOL_SERVER = 6
METRICS_AGG_NODE_POOL_SERVER = 7
METRICS_AGG_SERVICE = 8
METRICS_AGG_NODE_SERVICE = 9
METRICS_AGG_DIMENSIONID = 10
METRICS_OBJ_TYPE_UNKNOWN = 100
VSERVER_L4_SERVER = 101
VSERVER_L4_CLIENT = 102
VSERVER_L7_SERVER = 103
VSERVER_L7_CLIENT = 104
VM_METRICS_OBJ = 105
SE_METRICS_OBJ = 107
VSERVER_RUM = 108
CONTROLLER_METRICS_OBJ = 109
METRICS_COLLECTION = 110
METRICS_RUM_PREAGG_BROWSER_OBJ = 111
METRICS_RUM_PREAGG_COUNTRY_OBJ = 112
METRICS_RUM_PREAGG_DEVTYPE_OBJ = 113
METRICS_RUM_PREAGG_LANG_OBJ = 114
METRICS_RUM_PREAGG_OS_OBJ = 115
METRICS_RUM_PREAGG_URL_OBJ = 116
METRICS_ANOMALY_OBJ = 117
METRICS_HEALTHSCORE_OBJ = 118
METRICS_RESOURCE_TIMING_BROWSER_OBJ = 119
METRICS_RESOURCE_TIMING_OS_OBJ = 120
METRICS_RESOURCE_TIMING_COUNTRY_OBJ = 121
METRICS_RESOURCE_TIMING_LANG_OBJ = 122
METRICS_RESOURCE_TIMING_DEVTYPE_OBJ = 123
METRICS_RESOURCE_TIMING_URL_OBJ = 124
METRICS_RESOURCE_TIMING_DIMENSION_OBJ = 125
METRICS_RESOURCE_TIMING_BLOB_OBJ = 126
METRICS_DOS_OBJ = 127
METRICS_RUM_PREAGG_IPGROUP_OBJ = 128
METRICS_APP_INSIGHTS_OBJ = 129
METRICS_VSERVER_DNS_OBJ = 130
METRICS_SERVER_DNS_OBJ = 131
METRICS_SERVICE_INSIGHTS_OBJ = 132
METRICS_SOURCE_INSIGHTS_OBJ = 133
METRICS_TENANT_STATS_OBJ = 134
METRICS_SE_IF_STATS_OBJ = 135
METRICS_USER_METRICS_OBJ = 136
METRICS_WAF_GROUP_OBJ = 137
METRICS_WAF_RULE_OBJ = 138
METRICS_WAF_TAG_OBJ = 139
METRICS_PROCESS_STATS_OBJ = 140
AGGREGATE_TYPE_ALL = 100
AGGREGATE_TYPE_FIRST = 101
AGGREGATE_TYPE_PRIMARY_KEY_IP_PORT = 103
AGGREGATE_TYPE_TS_EARLIEST = 104
AGGREGATE_TYPE_TS_LATEST = 105
METRIC_TIMESTAMP = 1
METRIC_PERIOD = 2
POOL_KEY = 3
OBJ_KEY = 4
ENTITY_KEY = 5
NODE_KEY = 6
COUNTRY_KEY = 7
OS_KEY = 8
URL_KEY = 9
DEVTYPE_KEY = 10
LANG_KEY = 11
BROWSER_KEY = 12
TIMESTAMP = 13
OBJ_TYPE = 14
METRIC_RUM_SAMPLE_TYPE = 15
METRIC_ID = 16
PRIORITY = 17
CI_SRC_TYPE = 18
BLOB_KEY = 19
IPGROUP_KEY = 20
TENANT_KEY = 21
ENTITY_TYPE = 22
ATTACK_KEY = 23
DIMENSIONID_KEY = 24
METRICS_DIMENSION = 25
ASN_KEY = 26
METRICS_DIMENSION_METRIC_TIMESTAMP = 0
METRICS_DIMENSION_COUNTRY = 1
METRICS_DIMENSION_OS = 2
METRICS_DIMENSION_URL = 3
METRICS_DIMENSION_DEVTYPE = 4
METRICS_DIMENSION_LANG = 5
METRICS_DIMENSION_BROWSER = 6
METRICS_DIMENSION_IPGROUP = 7
METRICS_DIMENSION_ATTACK = 8
METRICS_DIMENSION_ASN = 9
METRICS_DB_TABLE_ARCHIVE_NONE = 0
METRICS_DB_TABLE_ARCHIVE_ALL = 1
METRICS_DB_TABLE_ARCHIVE_HIGHEST = 2
METRICS_DB_TABLE_ARCHIVE_LOWEST = 3
METRICS_DB_TABLE_ARCHIVE_DAY = 4
METRICS_DB_TABLE_ARCHIVE_DAY_WEEK = 5
METRICS_DB_TABLE_ARCHIVE_DAY_YEAR = 6
METRICS_TABLE_NONE = 0
METRICS_TABLE_ANOMALY = 1
METRICS_TABLE_CONTROLLER_STATS = 2
METRICS_TABLE_HEALTH_SCORE = 3
METRICS_TABLE_SE_STATS = 4
METRICS_TABLE_VSERVER_L4_SERVER = 5
METRICS_TABLE_VSERVER_L4_CLIENT = 6
METRICS_TABLE_VSERVER_L7_CLIENT = 7
METRICS_TABLE_VSERVER_L7_SERVER = 8
METRICS_TABLE_RUM_PREAGG_BROWSER = 10
METRICS_TABLE_RUM_PREAGG_COUNTRY = 11
METRICS_TABLE_RUM_PREAGG_DEVTYPE = 12
METRICS_TABLE_RUM_PREAGG_LANG = 13
METRICS_TABLE_RUM_PREAGG_OS = 14
METRICS_TABLE_RUM_PREAGG_URL = 15
METRICS_TABLE_RUM_ANALYTICS = 16
METRICS_TABLE_VM_STATS = 23
METRICS_TABLE_RESOURCE_TIMING_DIM = 24
METRICS_TABLE_RESOURCE_TIMING_BLOB = 25
METRICS_TABLE_RUM_PREAGG_IPGROUP = 26
METRICS_TABLE_DOS_ANALYTICS = 27
METRICS_TABLE_APP_INSIGHTS = 28
METRICS_TABLE_VSERVER_DNS = 29
METRICS_TABLE_SERVER_DNS = 30
METRICS_TABLE_SERVICE_INSIGHTS = 31
METRICS_TABLE_SOURCE_INSIGHTS = 32
METRICS_TABLE_TENANT_STATS = 33
METRICS_TABLE_SE_IF_STATS = 34
METRICS_TABLE_USER_METRICS = 35
METRICS_TABLE_WAF_GROUP = 36
METRICS_TABLE_WAF_TAG = 37
METRICS_TABLE_WAF_RULE = 38
METRICS_TABLE_PROCESS_STATS = 39
EXPONENTIAL_MOVING_AVG = 1
EXPONENTIAL_WEIGHTED_MOVING_AVG = 2
HOLTWINTERS_AT_AS = 4
HOLTWINTERS_AT_MS = 8
COMBINE_MODELS_ALL = 0
COMBINE_MODELS_ANY = 1
VOLUMETRIC = 0
NON_VOLUMETRIC = 1
METRICS_HANDLER_LOCAL = 0
METRICS_HANDLER_RUM = 1
METRICS_HANDLER_DDOS = 2
MAGG_NONE = 0
MAGG_AVG = 1
MAGG_SUM = 2
MAGG_MAX = 3
MAGG_MIN = 4
ACI_MDEV = 0
ACI_MDEVCFG = 1
ACI_MFUNC_VSERVER = 2
VSERVER_METRICS_ENTITY = 1
VM_METRICS_ENTITY = 2
SE_METRICS_ENTITY = 3
CONTROLLER_METRICS_ENTITY = 4
APPLICATION_METRICS_ENTITY = 5
TENANT_METRICS_ENTITY = 6
METRICS_OBJ_ID_TYPE_VIRTUALSERVICE = 0
METRICS_OBJ_ID_TYPE_SERVER = 1
METRICS_OBJ_ID_TYPE_POOL = 2
METRICS_OBJ_ID_TYPE_SERVICEENGINE = 4
METRICS_OBJ_ID_TYPE_VIRTUALMACHINE = 5
METRICS_OBJ_ID_TYPE_CONTROLLER = 6
METRICS_OBJ_ID_TYPE_TENANT = 7
METRICS_OBJ_ID_TYPE_CLUSTER = 8
METRICS_OBJ_ID_TYPE_SE_INTERFACE = 9
M_ANOMALYZER_HIGH = 1
M_ANOMALYZER_MEDIUM = 2
M_ANOMALYZER_LOW = 3
M_ANOMALYZER_NONE = 4
EVENT_DETAILS_NONE = 0
EVENT_DETAILS_INCLUDE_SUMMARY = 1
EVENT_DETAILS_ONLY_SUMMARY = 2
ALERT_LOW = 1
ALERT_MEDIUM = 2
ALERT_HIGH = 3
ACTIONGROUP_LOW = 1
ACTIONGROUP_MEDIUM = 2
ACTIONGROUP_HIGH = 3
ACTIONGROUP_SYSLOG_ALL = 4
ACTIONGROUP_SYSLOG_CONFIG = 5
ACTIONGROUP_SYSLOG_SYSTEM = 6
ALERT_CONFIG_SCOPE_TENANT = 0
ALERT_CONFIG_SCOPE_ADMIN = 1
V4 = 0
DNS = 1
ENTERPRISE_16 = 0
ENTERPRISE_18 = 1
LIC_BACKEND_SERVERS = 1
LIC_SOCKETS = 2
LIC_CORES = 3
LIC_HOSTS = 4
LIC_SE_BANDWIDTH = 5

SERVICE_TRANSACTIONAL_FIELD_NUMBER = 50001
service_transactional = _descriptor.FieldDescriptor(
  name='service_transactional', full_name='service_transactional', index=0,
  number=50001, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SERVICE_Q_NAME_FIELD_NUMBER = 50002
service_q_name = _descriptor.FieldDescriptor(
  name='service_q_name', full_name='service_q_name', index=1,
  number=50002, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SERVICE_RPC_TIMEOUT_FIELD_NUMBER = 50003
service_rpc_timeout = _descriptor.FieldDescriptor(
  name='service_rpc_timeout', full_name='service_rpc_timeout', index=2,
  number=50003, type=13, cpp_type=3, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METHOD_TRANSACTIONAL_FIELD_NUMBER = 50001
method_transactional = _descriptor.FieldDescriptor(
  name='method_transactional', full_name='method_transactional', index=3,
  number=50001, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METHOD_Q_NAME_FIELD_NUMBER = 50002
method_q_name = _descriptor.FieldDescriptor(
  name='method_q_name', full_name='method_q_name', index=4,
  number=50002, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METHOD_RPC_TIMEOUT_FIELD_NUMBER = 50003
method_rpc_timeout = _descriptor.FieldDescriptor(
  name='method_rpc_timeout', full_name='method_rpc_timeout', index=5,
  number=50003, type=13, cpp_type=3, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METHOD_EXPIRABLE_FIELD_NUMBER = 50004
method_expirable = _descriptor.FieldDescriptor(
  name='method_expirable', full_name='method_expirable', index=6,
  number=50004, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
REFERS_TO_FIELD_NUMBER = 60001
refers_to = _descriptor.FieldDescriptor(
  name='refers_to', full_name='refers_to', index=7,
  number=60001, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
WEAK_REFERS_TO_FIELD_NUMBER = 60002
weak_refers_to = _descriptor.FieldDescriptor(
  name='weak_refers_to', full_name='weak_refers_to', index=8,
  number=60002, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
BELONGS_TO_FIELD_NUMBER = 60003
belongs_to = _descriptor.FieldDescriptor(
  name='belongs_to', full_name='belongs_to', index=9,
  number=60003, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_DESCRIPTION_FIELD_NUMBER = 60004
f_description = _descriptor.FieldDescriptor(
  name='f_description', full_name='f_description', index=10,
  number=60004, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
UNITS_FIELD_NUMBER = 60005
units = _descriptor.FieldDescriptor(
  name='units', full_name='units', index=11,
  number=60005, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
RANGE_FIELD_NUMBER = 60006
range = _descriptor.FieldDescriptor(
  name='range', full_name='range', index=12,
  number=60006, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
PATTERN_FIELD_NUMBER = 60007
pattern = _descriptor.FieldDescriptor(
  name='pattern', full_name='pattern', index=13,
  number=60007, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
MIN_ELEMENTS_FIELD_NUMBER = 60008
min_elements = _descriptor.FieldDescriptor(
  name='min_elements', full_name='min_elements', index=14,
  number=60008, type=5, cpp_type=1, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
MAX_ELEMENTS_FIELD_NUMBER = 60009
max_elements = _descriptor.FieldDescriptor(
  name='max_elements', full_name='max_elements', index=15,
  number=60009, type=5, cpp_type=1, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
UNION_ENUM_FIELD_NUMBER = 60010
union_enum = _descriptor.FieldDescriptor(
  name='union_enum', full_name='union_enum', index=16,
  number=60010, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SPECIAL_VALUES_FIELD_NUMBER = 60011
special_values = _descriptor.FieldDescriptor(
  name='special_values', full_name='special_values', index=17,
  number=60011, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRIC_TYPE_FIELD_NUMBER = 60012
metric_type = _descriptor.FieldDescriptor(
  name='metric_type', full_name='metric_type', index=18,
  number=60012, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=1,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
STRING_LENGTH_FIELD_NUMBER = 60013
string_length = _descriptor.FieldDescriptor(
  name='string_length', full_name='string_length', index=19,
  number=60013, type=13, cpp_type=3, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_MUST_FIELD_NUMBER = 60014
f_must = _descriptor.FieldDescriptor(
  name='f_must', full_name='f_must', index=20,
  number=60014, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
ORDERED_BY_FIELD_NUMBER = 60015
ordered_by = _descriptor.FieldDescriptor(
  name='ordered_by', full_name='ordered_by', index=21,
  number=60015, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
HYPERLINK_TO_FIELD_NUMBER = 60016
hyperlink_to = _descriptor.FieldDescriptor(
  name='hyperlink_to', full_name='hyperlink_to', index=22,
  number=60016, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SPECIAL_DEFAULT_FIELD_NUMBER = 60017
special_default = _descriptor.FieldDescriptor(
  name='special_default', full_name='special_default', index=23,
  number=60017, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_TYPEDEF_FIELD_NUMBER = 60018
f_typedef = _descriptor.FieldDescriptor(
  name='f_typedef', full_name='f_typedef', index=24,
  number=60018, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_READONLY_FIELD_NUMBER = 60019
f_readonly = _descriptor.FieldDescriptor(
  name='f_readonly', full_name='f_readonly', index=25,
  number=60019, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_BLOB_MESSAGE_FIELD_NUMBER = 60020
f_blob_message = _descriptor.FieldDescriptor(
  name='f_blob_message', full_name='f_blob_message', index=26,
  number=60020, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
DISP_HYPERLINK_TO_FIELD_NUMBER = 60021
disp_hyperlink_to = _descriptor.FieldDescriptor(
  name='disp_hyperlink_to', full_name='disp_hyperlink_to', index=27,
  number=60021, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_SENSITIVE_FIELD_NUMBER = 60022
f_sensitive = _descriptor.FieldDescriptor(
  name='f_sensitive', full_name='f_sensitive', index=28,
  number=60022, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_HIDDEN_FIELD_NUMBER = 60023
f_hidden = _descriptor.FieldDescriptor(
  name='f_hidden', full_name='f_hidden', index=29,
  number=60023, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_SKIP_INPUT_CHECK_FIELD_NUMBER = 60024
f_skip_input_check = _descriptor.FieldDescriptor(
  name='f_skip_input_check', full_name='f_skip_input_check', index=30,
  number=60024, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_JSON_DEFAULT_FIELD_NUMBER = 60025
f_json_default = _descriptor.FieldDescriptor(
  name='f_json_default', full_name='f_json_default', index=31,
  number=60025, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_CREATE_HEAT_RESOURCE_FIELD_NUMBER = 60026
f_create_heat_resource = _descriptor.FieldDescriptor(
  name='f_create_heat_resource', full_name='f_create_heat_resource', index=32,
  number=60026, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_MANDATORY_FIELD_NUMBER = 60027
f_mandatory = _descriptor.FieldDescriptor(
  name='f_mandatory', full_name='f_mandatory', index=33,
  number=60027, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
DEPRECATED_IN_FIELD_NUMBER = 60028
deprecated_in = _descriptor.FieldDescriptor(
  name='deprecated_in', full_name='deprecated_in', index=34,
  number=60028, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
INTRODUCED_IN_FIELD_NUMBER = 60029
introduced_in = _descriptor.FieldDescriptor(
  name='introduced_in', full_name='introduced_in', index=35,
  number=60029, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_IMMUTABLE_FIELD_NUMBER = 60030
f_immutable = _descriptor.FieldDescriptor(
  name='f_immutable', full_name='f_immutable', index=36,
  number=60030, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_INTERNAL_FIELD_NUMBER = 60031
f_internal = _descriptor.FieldDescriptor(
  name='f_internal', full_name='f_internal', index=37,
  number=60031, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
AGG_OP_FIELD_NUMBER = 70001
agg_op = _descriptor.FieldDescriptor(
  name='agg_op', full_name='agg_op', index=38,
  number=70001, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=1,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
TABLE_COLUMN_FIELD_NUMBER = 70002
table_column = _descriptor.FieldDescriptor(
  name='table_column', full_name='table_column', index=39,
  number=70002, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
DISRUPTIVE_UPDATE_FIELD_NUMBER = 70003
disruptive_update = _descriptor.FieldDescriptor(
  name='disruptive_update', full_name='disruptive_update', index=40,
  number=70003, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_HYPERVISOR_FIELD_NUMBER = 70004
metrics_hypervisor = _descriptor.FieldDescriptor(
  name='metrics_hypervisor', full_name='metrics_hypervisor', index=41,
  number=70004, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SEC_IDX_FIELD_NUMBER = 70005
sec_idx = _descriptor.FieldDescriptor(
  name='sec_idx', full_name='sec_idx', index=42,
  number=70005, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
AGGREGATE_FIELD_NUMBER = 70006
aggregate = _descriptor.FieldDescriptor(
  name='aggregate', full_name='aggregate', index=43,
  number=70006, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=100,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_DERIVATION_FIELD_NUMBER = 70007
metrics_derivation = _descriptor.FieldDescriptor(
  name='metrics_derivation', full_name='metrics_derivation', index=44,
  number=70007, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRIC_UNITS_FIELD_NUMBER = 70008
metric_units = _descriptor.FieldDescriptor(
  name='metric_units', full_name='metric_units', index=45,
  number=70008, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_RESP_LATENCY_BKT_FIELD_NUMBER = 70009
metrics_resp_latency_bkt = _descriptor.FieldDescriptor(
  name='metrics_resp_latency_bkt', full_name='metrics_resp_latency_bkt', index=46,
  number=70009, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_MIN_SCALE_FIELD_NUMBER = 70010
metrics_min_scale = _descriptor.FieldDescriptor(
  name='metrics_min_scale', full_name='metrics_min_scale', index=47,
  number=70010, type=1, cpp_type=5, label=1,
  has_default_value=False, default_value=float(0),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_MSG_HANDLER_FIELD_NUMBER = 70011
metrics_msg_handler = _descriptor.FieldDescriptor(
  name='metrics_msg_handler', full_name='metrics_msg_handler', index=48,
  number=70011, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
MAGG_FUNCTION_FIELD_NUMBER = 70012
magg_function = _descriptor.FieldDescriptor(
  name='magg_function', full_name='magg_function', index=49,
  number=70012, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_ID_OPTIONS_FIELD_NUMBER = 70013
metrics_id_options = _descriptor.FieldDescriptor(
  name='metrics_id_options', full_name='metrics_id_options', index=50,
  number=70013, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_RULE_OPTIONS_FIELD_NUMBER = 70014
metrics_rule_options = _descriptor.FieldDescriptor(
  name='metrics_rule_options', full_name='metrics_rule_options', index=51,
  number=70014, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_ACI_SKIP_FIELD_NUMBER = 70015
f_aci_skip = _descriptor.FieldDescriptor(
  name='f_aci_skip', full_name='f_aci_skip', index=52,
  number=70015, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRIC_MAX_CHECK_SKIP_FIELD_NUMBER = 70016
metric_max_check_skip = _descriptor.FieldDescriptor(
  name='metric_max_check_skip', full_name='metric_max_check_skip', index=53,
  number=70016, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_ANOMALYZER_PRIORITY_FIELD_NUMBER = 70017
m_anomalyzer_priority = _descriptor.FieldDescriptor(
  name='m_anomalyzer_priority', full_name='m_anomalyzer_priority', index=54,
  number=70017, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=1,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_STDIN_FIELD_NUMBER = 70018
f_stdin = _descriptor.FieldDescriptor(
  name='f_stdin', full_name='f_stdin', index=55,
  number=70018, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_SUM_AGG_INVALID_FIELD_NUMBER = 70019
metrics_sum_agg_invalid = _descriptor.FieldDescriptor(
  name='metrics_sum_agg_invalid', full_name='metrics_sum_agg_invalid', index=56,
  number=70019, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_SKIP_INACTIVITY_AGG_FIELD_NUMBER = 70020
metrics_skip_inactivity_agg = _descriptor.FieldDescriptor(
  name='metrics_skip_inactivity_agg', full_name='metrics_skip_inactivity_agg', index=57,
  number=70020, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
F_CLI_COMPLETION_FIELD_NUMBER = 70021
f_cli_completion = _descriptor.FieldDescriptor(
  name='f_cli_completion', full_name='f_cli_completion', index=58,
  number=70021, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_ANOMALYZER_OPTS_FIELD_NUMBER = 70022
metrics_anomalyzer_opts = _descriptor.FieldDescriptor(
  name='metrics_anomalyzer_opts', full_name='metrics_anomalyzer_opts', index=59,
  number=70022, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
DIFF_SKIP_FIELD_NUMBER = 70023
diff_skip = _descriptor.FieldDescriptor(
  name='diff_skip', full_name='diff_skip', index=60,
  number=70023, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SE_METRIC_TYPE_FIELD_NUMBER = 70024
se_metric_type = _descriptor.FieldDescriptor(
  name='se_metric_type', full_name='se_metric_type', index=61,
  number=70024, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=1,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
DEPRECATED_FIELD_NUMBER = 70025
deprecated = _descriptor.FieldDescriptor(
  name='deprecated', full_name='deprecated', index=62,
  number=70025, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
HSTREE_NODE_FIELD_NUMBER = 75001
hstree_node = _descriptor.FieldDescriptor(
  name='hstree_node', full_name='hstree_node', index=63,
  number=75001, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
HAS_DOMINANT_CONTRIBUTORS_FIELD_NUMBER = 75002
has_dominant_contributors = _descriptor.FieldDescriptor(
  name='has_dominant_contributors', full_name='has_dominant_contributors', index=64,
  number=75002, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
HSTREE_LINKTO_FIELD_NUMBER = 75003
hstree_linkto = _descriptor.FieldDescriptor(
  name='hstree_linkto', full_name='hstree_linkto', index=65,
  number=75003, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
HSVAL_ENUM_FIELD_NUMBER = 75004
hsval_enum = _descriptor.FieldDescriptor(
  name='hsval_enum', full_name='hsval_enum', index=66,
  number=75004, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
HSTREE_COMBINE_FN_FIELD_NUMBER = 75005
hstree_combine_fn = _descriptor.FieldDescriptor(
  name='hstree_combine_fn', full_name='hstree_combine_fn', index=67,
  number=75005, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SORTABLE_FIELD_NUMBER = 80001
sortable = _descriptor.FieldDescriptor(
  name='sortable', full_name='sortable', index=68,
  number=80001, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
GROUPABLE_FIELD_NUMBER = 80002
groupable = _descriptor.FieldDescriptor(
  name='groupable', full_name='groupable', index=69,
  number=80002, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
XML_ATTR_FIELD_NUMBER = 80003
xml_attr = _descriptor.FieldDescriptor(
  name='xml_attr', full_name='xml_attr', index=70,
  number=80003, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
POOL_SHARING_AGG_SUM_VALID_FIELD_NUMBER = 80004
pool_sharing_agg_sum_valid = _descriptor.FieldDescriptor(
  name='pool_sharing_agg_sum_valid', full_name='pool_sharing_agg_sum_valid', index=71,
  number=80004, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
MAGG_NODE_FUNCTION_FIELD_NUMBER = 80005
magg_node_function = _descriptor.FieldDescriptor(
  name='magg_node_function', full_name='magg_node_function', index=72,
  number=80005, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
TEXT_FIELD_NUMBER = 70001
text = _descriptor.FieldDescriptor(
  name='text', full_name='text', index=73,
  number=70001, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
E_DESCRIPTION_FIELD_NUMBER = 70002
e_description = _descriptor.FieldDescriptor(
  name='e_description', full_name='e_description', index=74,
  number=70002, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_DESC_FIELD_NUMBER = 70003
event_desc = _descriptor.FieldDescriptor(
  name='event_desc', full_name='event_desc', index=75,
  number=70003, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
ERROR_TYPE_FIELD_NUMBER = 70004
error_type = _descriptor.FieldDescriptor(
  name='error_type', full_name='error_type', index=76,
  number=70004, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=1,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
E_FORMAT_STR_FIELD_NUMBER = 70005
e_format_str = _descriptor.FieldDescriptor(
  name='e_format_str', full_name='e_format_str', index=77,
  number=70005, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
E_FORMAT_FUNC_FIELD_NUMBER = 70006
e_format_func = _descriptor.FieldDescriptor(
  name='e_format_func', full_name='e_format_func', index=78,
  number=70006, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
OS_SECGRP_PROTOCOL_FIELD_NUMBER = 70007
os_secgrp_protocol = _descriptor.FieldDescriptor(
  name='os_secgrp_protocol', full_name='os_secgrp_protocol', index=79,
  number=70007, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_DETAILS_FIELD_NUMBER = 70008
event_details = _descriptor.FieldDescriptor(
  name='event_details', full_name='event_details', index=80,
  number=70008, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_OBJECT_FIELD_NUMBER = 70009
event_object = _descriptor.FieldDescriptor(
  name='event_object', full_name='event_object', index=81,
  number=70009, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SYSEV_ALERT_OPTIONS_FIELD_NUMBER = 70010
sysev_alert_options = _descriptor.FieldDescriptor(
  name='sysev_alert_options', full_name='sysev_alert_options', index=82,
  number=70010, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_INTERNAL_FIELD_NUMBER = 70011
event_internal = _descriptor.FieldDescriptor(
  name='event_internal', full_name='event_internal', index=83,
  number=70011, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
HTTP_REF_FIELD_NUMBER = 70012
http_ref = _descriptor.FieldDescriptor(
  name='http_ref', full_name='http_ref', index=84,
  number=70012, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_PAGE_POOL_FIELD_NUMBER = 70013
event_page_pool = _descriptor.FieldDescriptor(
  name='event_page_pool', full_name='event_page_pool', index=85,
  number=70013, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_PAGE_VS_FIELD_NUMBER = 70014
event_page_vs = _descriptor.FieldDescriptor(
  name='event_page_vs', full_name='event_page_vs', index=86,
  number=70014, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_PAGE_SE_FIELD_NUMBER = 70015
event_page_se = _descriptor.FieldDescriptor(
  name='event_page_se', full_name='event_page_se', index=87,
  number=70015, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_PAGE_CNTLR_FIELD_NUMBER = 70016
event_page_cntlr = _descriptor.FieldDescriptor(
  name='event_page_cntlr', full_name='event_page_cntlr', index=88,
  number=70016, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_PAGE_ADMIN_ACCOUNT_FIELD_NUMBER = 70017
event_page_admin_account = _descriptor.FieldDescriptor(
  name='event_page_admin_account', full_name='event_page_admin_account', index=89,
  number=70017, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_PAGE_AUDIT_TRAIL_FIELD_NUMBER = 70018
event_page_audit_trail = _descriptor.FieldDescriptor(
  name='event_page_audit_trail', full_name='event_page_audit_trail', index=90,
  number=70018, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_PAGE_ALL_FIELD_NUMBER = 70019
event_page_all = _descriptor.FieldDescriptor(
  name='event_page_all', full_name='event_page_all', index=91,
  number=70019, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
GENERIC_EVENT_FIELD_NUMBER = 70020
generic_event = _descriptor.FieldDescriptor(
  name='generic_event', full_name='generic_event', index=92,
  number=70020, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
IGNORE_EVENT_DETAILS_FIELD_NUMBER = 70021
ignore_event_details = _descriptor.FieldDescriptor(
  name='ignore_event_details', full_name='ignore_event_details', index=93,
  number=70021, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_INDEXES_OPTION_FIELD_NUMBER = 70022
metrics_indexes_option = _descriptor.FieldDescriptor(
  name='metrics_indexes_option', full_name='metrics_indexes_option', index=94,
  number=70022, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
E_RECOMMENDATION_FIELD_NUMBER = 70023
e_recommendation = _descriptor.FieldDescriptor(
  name='e_recommendation', full_name='e_recommendation', index=95,
  number=70023, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_DESC_FUNC_FIELD_NUMBER = 70024
event_desc_func = _descriptor.FieldDescriptor(
  name='event_desc_func', full_name='event_desc_func', index=96,
  number=70024, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SSL_PERFORMANCE_FIELD_NUMBER = 70025
ssl_performance = _descriptor.FieldDescriptor(
  name='ssl_performance', full_name='ssl_performance', index=97,
  number=70025, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SSL_COMPATIBILITY_FIELD_NUMBER = 70026
ssl_compatibility = _descriptor.FieldDescriptor(
  name='ssl_compatibility', full_name='ssl_compatibility', index=98,
  number=70026, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SSL_SECURITY_FIELD_NUMBER = 70027
ssl_security = _descriptor.FieldDescriptor(
  name='ssl_security', full_name='ssl_security', index=99,
  number=70027, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SSL_SECURITY_SCORE_FIELD_NUMBER = 70031
ssl_security_score = _descriptor.FieldDescriptor(
  name='ssl_security_score', full_name='ssl_security_score', index=100,
  number=70031, type=1, cpp_type=5, label=1,
  has_default_value=False, default_value=float(0),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
IS_SECURITY_EVENT_FIELD_NUMBER = 70028
is_security_event = _descriptor.FieldDescriptor(
  name='is_security_event', full_name='is_security_event', index=101,
  number=70028, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
CATEGORY_TITLE_FIELD_NUMBER = 70029
category_title = _descriptor.FieldDescriptor(
  name='category_title', full_name='category_title', index=102,
  number=70029, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
DOS_EVENT_ID_NAME_FIELD_NUMBER = 70030
dos_event_id_name = _descriptor.FieldDescriptor(
  name='dos_event_id_name', full_name='dos_event_id_name', index=103,
  number=70030, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SSL_TLS_1_0_FIELD_NUMBER = 70032
ssl_tls_1_0 = _descriptor.FieldDescriptor(
  name='ssl_tls_1_0', full_name='ssl_tls_1_0', index=104,
  number=70032, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SSL_TLS_1_1_FIELD_NUMBER = 70033
ssl_tls_1_1 = _descriptor.FieldDescriptor(
  name='ssl_tls_1_1', full_name='ssl_tls_1_1', index=105,
  number=70033, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SSL_TLS_1_2_FIELD_NUMBER = 70034
ssl_tls_1_2 = _descriptor.FieldDescriptor(
  name='ssl_tls_1_2', full_name='ssl_tls_1_2', index=106,
  number=70034, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EVENT_VERBOSE_FIELD_NUMBER = 70035
event_verbose = _descriptor.FieldDescriptor(
  name='event_verbose', full_name='event_verbose', index=107,
  number=70035, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
ATTACK_CATEGORY_FIELD_NUMBER = 70036
attack_category = _descriptor.FieldDescriptor(
  name='attack_category', full_name='attack_category', index=108,
  number=70036, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
CLOUD_TYPE_OPTIONS_FIELD_NUMBER = 70037
cloud_type_options = _descriptor.FieldDescriptor(
  name='cloud_type_options', full_name='cloud_type_options', index=109,
  number=70037, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_TYPEDEF_FIELD_NUMBER = 60001
m_typedef = _descriptor.FieldDescriptor(
  name='m_typedef', full_name='m_typedef', index=110,
  number=60001, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_UNION_FIELD_NUMBER = 60002
m_union = _descriptor.FieldDescriptor(
  name='m_union', full_name='m_union', index=111,
  number=60002, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
KEY_FIELD_NUMBER = 60003
key = _descriptor.FieldDescriptor(
  name='key', full_name='key', index=112,
  number=60003, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
UNIQUE_FIELD_NUMBER = 60004
unique = _descriptor.FieldDescriptor(
  name='unique', full_name='unique', index=113,
  number=60004, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
SUBMODE_FIELD_NUMBER = 60005
submode = _descriptor.FieldDescriptor(
  name='submode', full_name='submode', index=114,
  number=60005, type=8, cpp_type=7, label=1,
  has_default_value=True, default_value=True,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_MUST_FIELD_NUMBER = 60006
m_must = _descriptor.FieldDescriptor(
  name='m_must', full_name='m_must', index=115,
  number=60006, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_TRANSFORM_FIELD_NUMBER = 60007
m_transform = _descriptor.FieldDescriptor(
  name='m_transform', full_name='m_transform', index=116,
  number=60007, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_DEFAULT_FIELD_NUMBER = 60008
m_default = _descriptor.FieldDescriptor(
  name='m_default', full_name='m_default', index=117,
  number=60008, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_BLOB_NESTED_MESSAGES_FIELD_NUMBER = 60009
m_blob_nested_messages = _descriptor.FieldDescriptor(
  name='m_blob_nested_messages', full_name='m_blob_nested_messages', index=118,
  number=60009, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_RESOLVE_FIELD_NUMBER = 60010
m_resolve = _descriptor.FieldDescriptor(
  name='m_resolve', full_name='m_resolve', index=119,
  number=60010, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_PRE_FIELD_NUMBER = 60011
m_pre = _descriptor.FieldDescriptor(
  name='m_pre', full_name='m_pre', index=120,
  number=60011, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_OPTIONAL_CHECK_FIELD_NUMBER = 60012
m_optional_check = _descriptor.FieldDescriptor(
  name='m_optional_check', full_name='m_optional_check', index=121,
  number=60012, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
MESSAGE_ROOT_FIELD_NUMBER = 70001
message_root = _descriptor.FieldDescriptor(
  name='message_root', full_name='message_root', index=122,
  number=70001, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
DB_NOTIFICATION_FIELD_NUMBER = 70002
db_notification = _descriptor.FieldDescriptor(
  name='db_notification', full_name='db_notification', index=123,
  number=70002, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_OPTIONS_FIELD_NUMBER = 70003
metrics_options = _descriptor.FieldDescriptor(
  name='metrics_options', full_name='metrics_options', index=124,
  number=70003, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_ROLLED_UP_FIELD_NUMBER = 70004
metrics_rolled_up = _descriptor.FieldDescriptor(
  name='metrics_rolled_up', full_name='metrics_rolled_up', index=125,
  number=70004, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_FORMAT_STR_FIELD_NUMBER = 70005
m_format_str = _descriptor.FieldDescriptor(
  name='m_format_str', full_name='m_format_str', index=126,
  number=70005, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_FORMAT_FUNC_FIELD_NUMBER = 70006
m_format_func = _descriptor.FieldDescriptor(
  name='m_format_func', full_name='m_format_func', index=127,
  number=70006, type=9, cpp_type=9, label=1,
  has_default_value=False, default_value=_b("").decode('utf-8'),
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_ACI_SKIP_FIELD_NUMBER = 70007
m_aci_skip = _descriptor.FieldDescriptor(
  name='m_aci_skip', full_name='m_aci_skip', index=128,
  number=70007, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_ACI_SCHEMA_TAG_FIELD_NUMBER = 70008
m_aci_schema_tag = _descriptor.FieldDescriptor(
  name='m_aci_schema_tag', full_name='m_aci_schema_tag', index=129,
  number=70008, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
METRICS_ENTITY_FIELD_NUMBER = 70009
metrics_entity = _descriptor.FieldDescriptor(
  name='metrics_entity', full_name='metrics_entity', index=130,
  number=70009, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=1,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
EV_DETAILS_OPTIONS_FIELD_NUMBER = 70010
ev_details_options = _descriptor.FieldDescriptor(
  name='ev_details_options', full_name='ev_details_options', index=131,
  number=70010, type=14, cpp_type=8, label=1,
  has_default_value=False, default_value=0,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
DB_NOTIFICATION_SPECIAL_FIELD_NUMBER = 70011
db_notification_special = _descriptor.FieldDescriptor(
  name='db_notification_special', full_name='db_notification_special', index=132,
  number=70011, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
DB_NOTIFICATION_SELECT_ONLY_FIELD_NUMBER = 70012
db_notification_select_only = _descriptor.FieldDescriptor(
  name='db_notification_select_only', full_name='db_notification_select_only', index=133,
  number=70012, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
BASE_OBJ_DB_NOTIFICATION_FIELD_NUMBER = 70013
base_obj_db_notification = _descriptor.FieldDescriptor(
  name='base_obj_db_notification', full_name='base_obj_db_notification', index=134,
  number=70013, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_SKIP_CACHE_FIELD_NUMBER = 70014
m_skip_cache = _descriptor.FieldDescriptor(
  name='m_skip_cache', full_name='m_skip_cache', index=135,
  number=70014, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_HEAT_SKIP_FIELD_NUMBER = 70015
m_heat_skip = _descriptor.FieldDescriptor(
  name='m_heat_skip', full_name='m_heat_skip', index=136,
  number=70015, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_SKIP_DATASTORE_FIELD_NUMBER = 70016
m_skip_datastore = _descriptor.FieldDescriptor(
  name='m_skip_datastore', full_name='m_skip_datastore', index=137,
  number=70016, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)
M_SKIP_DB2DATASTORE_REFERENCES_FIELD_NUMBER = 70017
m_skip_db2datastore_references = _descriptor.FieldDescriptor(
  name='m_skip_db2datastore_references', full_name='m_skip_db2datastore_references', index=138,
  number=70017, type=8, cpp_type=7, label=1,
  has_default_value=False, default_value=False,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  options=None)


_METRICSPROVIDERHYPERVISOR = _descriptor.Descriptor(
  name='MetricsProviderHypervisor',
  full_name='MetricsProviderHypervisor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vmware', full_name='MetricsProviderHypervisor.vmware', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kvm', full_name='MetricsProviderHypervisor.kvm', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=51,
  serialized_end=107,
)


_METRICRESPLATENCYTIMEINTERVAL = _descriptor.Descriptor(
  name='MetricRespLatencyTimeInterval',
  full_name='MetricRespLatencyTimeInterval',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start', full_name='MetricRespLatencyTimeInterval.start', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end', full_name='MetricRespLatencyTimeInterval.end', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=109,
  serialized_end=216,
)


_METRICSOPTIONS = _descriptor.Descriptor(
  name='MetricsOptions',
  full_name='MetricsOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metrics_obj_type', full_name='MetricsOptions.metrics_obj_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=100,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metrics_aggregation', full_name='MetricsOptions.metrics_aggregation', index=1,
      number=2, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metrics_z_score_threshold', full_name='MetricsOptions.metrics_z_score_threshold', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='indexes', full_name='MetricsOptions.indexes', index=3,
      number=4, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='archive_policy', full_name='MetricsOptions.archive_policy', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='table_id', full_name='MetricsOptions.table_id', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metrics_object', full_name='MetricsOptions.metrics_object', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='entity_types', full_name='MetricsOptions.entity_types', index=7,
      number=8, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=219,
  serialized_end=589,
)


_METRICSINDEXESOPTION = _descriptor.Descriptor(
  name='MetricsIndexesOption',
  full_name='MetricsIndexesOption',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='primary_key', full_name='MetricsIndexesOption.primary_key', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dtype', full_name='MetricsIndexesOption.dtype', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='toindex', full_name='MetricsIndexesOption.toindex', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nullable', full_name='MetricsIndexesOption.nullable', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unique_key', full_name='MetricsIndexesOption.unique_key', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='foreign_key', full_name='MetricsIndexesOption.foreign_key', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='enum_name', full_name='MetricsIndexesOption.enum_name', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=592,
  serialized_end=745,
)


_METRICSANOMALYZEROPTIONS = _descriptor.Descriptor(
  name='MetricsAnomalyzerOptions',
  full_name='MetricsAnomalyzerOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='anomaly_model_opts', full_name='MetricsAnomalyzerOptions.anomaly_model_opts', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='skip_eval_period', full_name='MetricsAnomalyzerOptions.skip_eval_period', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\240\001Skip the training period for anomaly. Should only be used for special error cases where we don\'t wantto wait for exponential moving average to learn the pattern'))),
    _descriptor.FieldDescriptor(
      name='anomaly_interpretation', full_name='MetricsAnomalyzerOptions.anomaly_interpretation', index=2,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=748,
  serialized_end=1109,
)


_METRICSANOMALYMODELOPTIONS = _descriptor.Descriptor(
  name='MetricsAnomalyModelOptions',
  full_name='MetricsAnomalyModelOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='anomaly_model', full_name='MetricsAnomalyModelOptions.anomaly_model', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\250\001The model to use. For Holt Winters methods, thealpha, beta, gamma, are set with inputs from the paper: Aberrant Behavior Detection in Time Series for Network Monitoring'))),
    _descriptor.FieldDescriptor(
      name='period', full_name='MetricsAnomalyModelOptions.period', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035WSpecify the period for which the seasonality applies. To be used with HoltWinters only.'))),
    _descriptor.FieldDescriptor(
      name='seasonality', full_name='MetricsAnomalyModelOptions.seasonality', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\206\001Seasonality for the metric if HoltWinters is to be applied. E.g. for data repeating annually with per month samples, seasonality is 12'))),
    _descriptor.FieldDescriptor(
      name='alpha', full_name='MetricsAnomalyModelOptions.alpha', index=3,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=float(0.22),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035LHW: alpha. Gives 95% weight to (5min) samples in the last hour (12 samples).'))),
    _descriptor.FieldDescriptor(
      name='beta', full_name='MetricsAnomalyModelOptions.beta', index=4,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=float(0.00034),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035MHW: beta. Gives 50% weight to (5min) samples in the last week (2016 samples).'))),
    _descriptor.FieldDescriptor(
      name='gamma', full_name='MetricsAnomalyModelOptions.gamma', index=5,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=float(0.22),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\tHW: gamma'))),
    _descriptor.FieldDescriptor(
      name='delta', full_name='MetricsAnomalyModelOptions.delta', index=6,
      number=9, type=1, cpp_type=5, label=1,
      has_default_value=True, default_value=float(0.22),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\tHW: delta'))),
    _descriptor.FieldDescriptor(
      name='allowed_entity_types', full_name='MetricsAnomalyModelOptions.allowed_entity_types', index=7,
      number=10, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035.Entity types for which to do anomaly detection'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1112,
  serialized_end=2063,
)


_METRICSRULEOPTIONS = _descriptor.Descriptor(
  name='MetricsRuleOptions',
  full_name='MetricsRuleOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rule_type', full_name='MetricsRuleOptions.rule_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='low_wms', full_name='MetricsRuleOptions.low_wms', index=1,
      number=2, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='high_wms', full_name='MetricsRuleOptions.high_wms', index=2,
      number=3, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='event_id_name', full_name='MetricsRuleOptions.event_id_name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='only_positive_anomalies', full_name='MetricsRuleOptions.only_positive_anomalies', index=4,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035agenerate events only for positive deviations. Used only for the Generate Events on Anomaly option'))),
    _descriptor.FieldDescriptor(
      name='valid_event_period', full_name='MetricsRuleOptions.valid_event_period', index=5,
      number=11, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\0350Period for which the events are to be generated.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2066,
  serialized_end=2421,
)


_METRICIDOPTIONS = _descriptor.Descriptor(
  name='MetricIdOptions',
  full_name='MetricIdOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metrics_obj_type', full_name='MetricIdOptions.metrics_obj_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=100,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metrics_obj_field_name', full_name='MetricIdOptions.metrics_obj_field_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resource_threshold', full_name='MetricIdOptions.resource_threshold', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_hs_contributor', full_name='MetricIdOptions.is_hs_contributor', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2424,
  serialized_end=2577,
)


_ALERTOPTIONS = _descriptor.Descriptor(
  name='AlertOptions',
  full_name='AlertOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='level', full_name='AlertOptions.level', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='threshold', full_name='AlertOptions.threshold', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cfg_scope', full_name='AlertOptions.cfg_scope', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='AlertOptions.name', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=True, default_value=_b("System-Default").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2580,
  serialized_end=2739,
)


_METRICSDERIVATIONDATA = _descriptor.Descriptor(
  name='MetricsDerivationData',
  full_name='MetricsDerivationData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metric_ids', full_name='MetricsDerivationData.metric_ids', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='derivation_fn', full_name='MetricsDerivationData.derivation_fn', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='include_derivation_metrics', full_name='MetricsDerivationData.include_derivation_metrics', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exclude_derived_metric', full_name='MetricsDerivationData.exclude_derived_metric', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='result_has_additional_fields', full_name='MetricsDerivationData.result_has_additional_fields', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='join_tables', full_name='MetricsDerivationData.join_tables', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='skip_backend_derivation', full_name='MetricsDerivationData.skip_backend_derivation', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2742,
  serialized_end=3035,
)


_CLOUDTYPEOPTIONS = _descriptor.Descriptor(
  name='CloudTypeOptions',
  full_name='CloudTypeOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='allowed_licenses', full_name='CloudTypeOptions.allowed_licenses', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3037,
  serialized_end=3095,
)


_IPADDR = _descriptor.Descriptor(
  name='IpAddr',
  full_name='IpAddr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='IpAddr.addr', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\nIP address'))),
    _descriptor.FieldDescriptor(
      name='type', full_name='IpAddr.type', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\212\246\035\034IP4 Address format <x.x.x.x>\232\246\035\004addr')),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3097,
  serialized_end=3204,
)


_IPADDRPREFIX = _descriptor.Descriptor(
  name='IpAddrPrefix',
  full_name='IpAddrPrefix',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip_addr', full_name='IpAddrPrefix.ip_addr', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mask', full_name='IpAddrPrefix.mask', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\212\246\035\035IP4 Prefix format <x.x.x.x/x>\232\246\035\014ip_addr,mask')),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3206,
  serialized_end=3311,
)

_METRICRESPLATENCYTIMEINTERVAL.fields_by_name['start'].enum_type = _METRICRESPLATENCYTIME
_METRICRESPLATENCYTIMEINTERVAL.fields_by_name['end'].enum_type = _METRICRESPLATENCYTIME
_METRICSOPTIONS.fields_by_name['metrics_obj_type'].enum_type = _METRICSOBJTYPE
_METRICSOPTIONS.fields_by_name['metrics_aggregation'].enum_type = _METRICSAGGREGATIONENUM
_METRICSOPTIONS.fields_by_name['indexes'].enum_type = _METRICSINDEXES
_METRICSOPTIONS.fields_by_name['archive_policy'].enum_type = _METRICSDBTABLEARCHIVEPOLICY
_METRICSOPTIONS.fields_by_name['table_id'].enum_type = _METRICSTABLEID
_METRICSOPTIONS.fields_by_name['entity_types'].enum_type = _METRICSDATAOBJIDTYPE
_METRICSANOMALYZEROPTIONS.fields_by_name['anomaly_model_opts'].message_type = _METRICSANOMALYMODELOPTIONS
_METRICSANOMALYZEROPTIONS.fields_by_name['anomaly_interpretation'].enum_type = _ANOMALYINTERPRETATION
_METRICSANOMALYMODELOPTIONS.fields_by_name['anomaly_model'].enum_type = _ANOMALYMODELS
_METRICSANOMALYMODELOPTIONS.fields_by_name['period'].enum_type = _METRICPERIOD
_METRICSANOMALYMODELOPTIONS.fields_by_name['allowed_entity_types'].enum_type = _METRICSDATAOBJIDTYPE
_METRICSRULEOPTIONS.fields_by_name['rule_type'].enum_type = _METRICSRULETYPE
_METRICSRULEOPTIONS.fields_by_name['valid_event_period'].enum_type = _METRICPERIOD
_METRICIDOPTIONS.fields_by_name['metrics_obj_type'].enum_type = _METRICSOBJTYPE
_ALERTOPTIONS.fields_by_name['level'].enum_type = _ALERTLEVEL
_ALERTOPTIONS.fields_by_name['cfg_scope'].enum_type = _ALERTCONFIGSCOPE
_METRICSDERIVATIONDATA.fields_by_name['derivation_fn'].enum_type = _METRICSDERIVATIONFN
_METRICSDERIVATIONDATA.fields_by_name['join_tables'].enum_type = _METRICSTABLEID
_CLOUDTYPEOPTIONS.fields_by_name['allowed_licenses'].enum_type = _LICENSETYPE
_IPADDR.fields_by_name['type'].enum_type = _IPADDRTYPE
_IPADDRPREFIX.fields_by_name['ip_addr'].message_type = _IPADDR
DESCRIPTOR.message_types_by_name['MetricsProviderHypervisor'] = _METRICSPROVIDERHYPERVISOR
DESCRIPTOR.message_types_by_name['MetricRespLatencyTimeInterval'] = _METRICRESPLATENCYTIMEINTERVAL
DESCRIPTOR.message_types_by_name['MetricsOptions'] = _METRICSOPTIONS
DESCRIPTOR.message_types_by_name['MetricsIndexesOption'] = _METRICSINDEXESOPTION
DESCRIPTOR.message_types_by_name['MetricsAnomalyzerOptions'] = _METRICSANOMALYZEROPTIONS
DESCRIPTOR.message_types_by_name['MetricsAnomalyModelOptions'] = _METRICSANOMALYMODELOPTIONS
DESCRIPTOR.message_types_by_name['MetricsRuleOptions'] = _METRICSRULEOPTIONS
DESCRIPTOR.message_types_by_name['MetricIdOptions'] = _METRICIDOPTIONS
DESCRIPTOR.message_types_by_name['AlertOptions'] = _ALERTOPTIONS
DESCRIPTOR.message_types_by_name['MetricsDerivationData'] = _METRICSDERIVATIONDATA
DESCRIPTOR.message_types_by_name['CloudTypeOptions'] = _CLOUDTYPEOPTIONS
DESCRIPTOR.message_types_by_name['IpAddr'] = _IPADDR
DESCRIPTOR.message_types_by_name['IpAddrPrefix'] = _IPADDRPREFIX
DESCRIPTOR.enum_types_by_name['ComparisonOperator'] = _COMPARISONOPERATOR
DESCRIPTOR.enum_types_by_name['MetricPeriod'] = _METRICPERIOD
DESCRIPTOR.enum_types_by_name['MetricType'] = _METRICTYPE
DESCRIPTOR.enum_types_by_name['SeMetricType'] = _SEMETRICTYPE
DESCRIPTOR.enum_types_by_name['MetricsDerivationFn'] = _METRICSDERIVATIONFN
DESCRIPTOR.enum_types_by_name['MetricUnits'] = _METRICUNITS
DESCRIPTOR.enum_types_by_name['MetricsRuleType'] = _METRICSRULETYPE
DESCRIPTOR.enum_types_by_name['PbAggOp'] = _PBAGGOP
DESCRIPTOR.enum_types_by_name['VinfraErrCategory'] = _VINFRAERRCATEGORY
DESCRIPTOR.enum_types_by_name['MetricRespLatencyTime'] = _METRICRESPLATENCYTIME
DESCRIPTOR.enum_types_by_name['MetricsAggregationEnum'] = _METRICSAGGREGATIONENUM
DESCRIPTOR.enum_types_by_name['MetricsObjType'] = _METRICSOBJTYPE
DESCRIPTOR.enum_types_by_name['AggregateType'] = _AGGREGATETYPE
DESCRIPTOR.enum_types_by_name['MetricsIndexes'] = _METRICSINDEXES
DESCRIPTOR.enum_types_by_name['MetricsDimension'] = _METRICSDIMENSION
DESCRIPTOR.enum_types_by_name['MetricsDbTableArchivePolicy'] = _METRICSDBTABLEARCHIVEPOLICY
DESCRIPTOR.enum_types_by_name['MetricsTableId'] = _METRICSTABLEID
DESCRIPTOR.enum_types_by_name['AnomalyModels'] = _ANOMALYMODELS
DESCRIPTOR.enum_types_by_name['AnomalyInterpretation'] = _ANOMALYINTERPRETATION
DESCRIPTOR.enum_types_by_name['AttackCategory'] = _ATTACKCATEGORY
DESCRIPTOR.enum_types_by_name['MetricsAgentMsgHandler'] = _METRICSAGENTMSGHANDLER
DESCRIPTOR.enum_types_by_name['MetricsAggregationFunction'] = _METRICSAGGREGATIONFUNCTION
DESCRIPTOR.enum_types_by_name['AciSchemaTag'] = _ACISCHEMATAG
DESCRIPTOR.enum_types_by_name['MetricsEntityType'] = _METRICSENTITYTYPE
DESCRIPTOR.enum_types_by_name['MetricsDataObjIdType'] = _METRICSDATAOBJIDTYPE
DESCRIPTOR.enum_types_by_name['MetricAnomalyzerPriority'] = _METRICANOMALYZERPRIORITY
DESCRIPTOR.enum_types_by_name['EventDetailsOptions'] = _EVENTDETAILSOPTIONS
DESCRIPTOR.enum_types_by_name['AlertLevel'] = _ALERTLEVEL
DESCRIPTOR.enum_types_by_name['AlertActionGroupDefaults'] = _ALERTACTIONGROUPDEFAULTS
DESCRIPTOR.enum_types_by_name['AlertConfigScope'] = _ALERTCONFIGSCOPE
DESCRIPTOR.enum_types_by_name['IpAddrType'] = _IPADDRTYPE
DESCRIPTOR.enum_types_by_name['LicenseTierType'] = _LICENSETIERTYPE
DESCRIPTOR.enum_types_by_name['LicenseType'] = _LICENSETYPE
DESCRIPTOR.extensions_by_name['service_transactional'] = service_transactional
DESCRIPTOR.extensions_by_name['service_q_name'] = service_q_name
DESCRIPTOR.extensions_by_name['service_rpc_timeout'] = service_rpc_timeout
DESCRIPTOR.extensions_by_name['method_transactional'] = method_transactional
DESCRIPTOR.extensions_by_name['method_q_name'] = method_q_name
DESCRIPTOR.extensions_by_name['method_rpc_timeout'] = method_rpc_timeout
DESCRIPTOR.extensions_by_name['method_expirable'] = method_expirable
DESCRIPTOR.extensions_by_name['refers_to'] = refers_to
DESCRIPTOR.extensions_by_name['weak_refers_to'] = weak_refers_to
DESCRIPTOR.extensions_by_name['belongs_to'] = belongs_to
DESCRIPTOR.extensions_by_name['f_description'] = f_description
DESCRIPTOR.extensions_by_name['units'] = units
DESCRIPTOR.extensions_by_name['range'] = range
DESCRIPTOR.extensions_by_name['pattern'] = pattern
DESCRIPTOR.extensions_by_name['min_elements'] = min_elements
DESCRIPTOR.extensions_by_name['max_elements'] = max_elements
DESCRIPTOR.extensions_by_name['union_enum'] = union_enum
DESCRIPTOR.extensions_by_name['special_values'] = special_values
DESCRIPTOR.extensions_by_name['metric_type'] = metric_type
DESCRIPTOR.extensions_by_name['string_length'] = string_length
DESCRIPTOR.extensions_by_name['f_must'] = f_must
DESCRIPTOR.extensions_by_name['ordered_by'] = ordered_by
DESCRIPTOR.extensions_by_name['hyperlink_to'] = hyperlink_to
DESCRIPTOR.extensions_by_name['special_default'] = special_default
DESCRIPTOR.extensions_by_name['f_typedef'] = f_typedef
DESCRIPTOR.extensions_by_name['f_readonly'] = f_readonly
DESCRIPTOR.extensions_by_name['f_blob_message'] = f_blob_message
DESCRIPTOR.extensions_by_name['disp_hyperlink_to'] = disp_hyperlink_to
DESCRIPTOR.extensions_by_name['f_sensitive'] = f_sensitive
DESCRIPTOR.extensions_by_name['f_hidden'] = f_hidden
DESCRIPTOR.extensions_by_name['f_skip_input_check'] = f_skip_input_check
DESCRIPTOR.extensions_by_name['f_json_default'] = f_json_default
DESCRIPTOR.extensions_by_name['f_create_heat_resource'] = f_create_heat_resource
DESCRIPTOR.extensions_by_name['f_mandatory'] = f_mandatory
DESCRIPTOR.extensions_by_name['deprecated_in'] = deprecated_in
DESCRIPTOR.extensions_by_name['introduced_in'] = introduced_in
DESCRIPTOR.extensions_by_name['f_immutable'] = f_immutable
DESCRIPTOR.extensions_by_name['f_internal'] = f_internal
DESCRIPTOR.extensions_by_name['agg_op'] = agg_op
DESCRIPTOR.extensions_by_name['table_column'] = table_column
DESCRIPTOR.extensions_by_name['disruptive_update'] = disruptive_update
DESCRIPTOR.extensions_by_name['metrics_hypervisor'] = metrics_hypervisor
DESCRIPTOR.extensions_by_name['sec_idx'] = sec_idx
DESCRIPTOR.extensions_by_name['aggregate'] = aggregate
DESCRIPTOR.extensions_by_name['metrics_derivation'] = metrics_derivation
DESCRIPTOR.extensions_by_name['metric_units'] = metric_units
DESCRIPTOR.extensions_by_name['metrics_resp_latency_bkt'] = metrics_resp_latency_bkt
DESCRIPTOR.extensions_by_name['metrics_min_scale'] = metrics_min_scale
DESCRIPTOR.extensions_by_name['metrics_msg_handler'] = metrics_msg_handler
DESCRIPTOR.extensions_by_name['magg_function'] = magg_function
DESCRIPTOR.extensions_by_name['metrics_id_options'] = metrics_id_options
DESCRIPTOR.extensions_by_name['metrics_rule_options'] = metrics_rule_options
DESCRIPTOR.extensions_by_name['f_aci_skip'] = f_aci_skip
DESCRIPTOR.extensions_by_name['metric_max_check_skip'] = metric_max_check_skip
DESCRIPTOR.extensions_by_name['m_anomalyzer_priority'] = m_anomalyzer_priority
DESCRIPTOR.extensions_by_name['f_stdin'] = f_stdin
DESCRIPTOR.extensions_by_name['metrics_sum_agg_invalid'] = metrics_sum_agg_invalid
DESCRIPTOR.extensions_by_name['metrics_skip_inactivity_agg'] = metrics_skip_inactivity_agg
DESCRIPTOR.extensions_by_name['f_cli_completion'] = f_cli_completion
DESCRIPTOR.extensions_by_name['metrics_anomalyzer_opts'] = metrics_anomalyzer_opts
DESCRIPTOR.extensions_by_name['diff_skip'] = diff_skip
DESCRIPTOR.extensions_by_name['se_metric_type'] = se_metric_type
DESCRIPTOR.extensions_by_name['deprecated'] = deprecated
DESCRIPTOR.extensions_by_name['hstree_node'] = hstree_node
DESCRIPTOR.extensions_by_name['has_dominant_contributors'] = has_dominant_contributors
DESCRIPTOR.extensions_by_name['hstree_linkto'] = hstree_linkto
DESCRIPTOR.extensions_by_name['hsval_enum'] = hsval_enum
DESCRIPTOR.extensions_by_name['hstree_combine_fn'] = hstree_combine_fn
DESCRIPTOR.extensions_by_name['sortable'] = sortable
DESCRIPTOR.extensions_by_name['groupable'] = groupable
DESCRIPTOR.extensions_by_name['xml_attr'] = xml_attr
DESCRIPTOR.extensions_by_name['pool_sharing_agg_sum_valid'] = pool_sharing_agg_sum_valid
DESCRIPTOR.extensions_by_name['magg_node_function'] = magg_node_function
DESCRIPTOR.extensions_by_name['text'] = text
DESCRIPTOR.extensions_by_name['e_description'] = e_description
DESCRIPTOR.extensions_by_name['event_desc'] = event_desc
DESCRIPTOR.extensions_by_name['error_type'] = error_type
DESCRIPTOR.extensions_by_name['e_format_str'] = e_format_str
DESCRIPTOR.extensions_by_name['e_format_func'] = e_format_func
DESCRIPTOR.extensions_by_name['os_secgrp_protocol'] = os_secgrp_protocol
DESCRIPTOR.extensions_by_name['event_details'] = event_details
DESCRIPTOR.extensions_by_name['event_object'] = event_object
DESCRIPTOR.extensions_by_name['sysev_alert_options'] = sysev_alert_options
DESCRIPTOR.extensions_by_name['event_internal'] = event_internal
DESCRIPTOR.extensions_by_name['http_ref'] = http_ref
DESCRIPTOR.extensions_by_name['event_page_pool'] = event_page_pool
DESCRIPTOR.extensions_by_name['event_page_vs'] = event_page_vs
DESCRIPTOR.extensions_by_name['event_page_se'] = event_page_se
DESCRIPTOR.extensions_by_name['event_page_cntlr'] = event_page_cntlr
DESCRIPTOR.extensions_by_name['event_page_admin_account'] = event_page_admin_account
DESCRIPTOR.extensions_by_name['event_page_audit_trail'] = event_page_audit_trail
DESCRIPTOR.extensions_by_name['event_page_all'] = event_page_all
DESCRIPTOR.extensions_by_name['generic_event'] = generic_event
DESCRIPTOR.extensions_by_name['ignore_event_details'] = ignore_event_details
DESCRIPTOR.extensions_by_name['metrics_indexes_option'] = metrics_indexes_option
DESCRIPTOR.extensions_by_name['e_recommendation'] = e_recommendation
DESCRIPTOR.extensions_by_name['event_desc_func'] = event_desc_func
DESCRIPTOR.extensions_by_name['ssl_performance'] = ssl_performance
DESCRIPTOR.extensions_by_name['ssl_compatibility'] = ssl_compatibility
DESCRIPTOR.extensions_by_name['ssl_security'] = ssl_security
DESCRIPTOR.extensions_by_name['ssl_security_score'] = ssl_security_score
DESCRIPTOR.extensions_by_name['is_security_event'] = is_security_event
DESCRIPTOR.extensions_by_name['category_title'] = category_title
DESCRIPTOR.extensions_by_name['dos_event_id_name'] = dos_event_id_name
DESCRIPTOR.extensions_by_name['ssl_tls_1_0'] = ssl_tls_1_0
DESCRIPTOR.extensions_by_name['ssl_tls_1_1'] = ssl_tls_1_1
DESCRIPTOR.extensions_by_name['ssl_tls_1_2'] = ssl_tls_1_2
DESCRIPTOR.extensions_by_name['event_verbose'] = event_verbose
DESCRIPTOR.extensions_by_name['attack_category'] = attack_category
DESCRIPTOR.extensions_by_name['cloud_type_options'] = cloud_type_options
DESCRIPTOR.extensions_by_name['m_typedef'] = m_typedef
DESCRIPTOR.extensions_by_name['m_union'] = m_union
DESCRIPTOR.extensions_by_name['key'] = key
DESCRIPTOR.extensions_by_name['unique'] = unique
DESCRIPTOR.extensions_by_name['submode'] = submode
DESCRIPTOR.extensions_by_name['m_must'] = m_must
DESCRIPTOR.extensions_by_name['m_transform'] = m_transform
DESCRIPTOR.extensions_by_name['m_default'] = m_default
DESCRIPTOR.extensions_by_name['m_blob_nested_messages'] = m_blob_nested_messages
DESCRIPTOR.extensions_by_name['m_resolve'] = m_resolve
DESCRIPTOR.extensions_by_name['m_pre'] = m_pre
DESCRIPTOR.extensions_by_name['m_optional_check'] = m_optional_check
DESCRIPTOR.extensions_by_name['message_root'] = message_root
DESCRIPTOR.extensions_by_name['db_notification'] = db_notification
DESCRIPTOR.extensions_by_name['metrics_options'] = metrics_options
DESCRIPTOR.extensions_by_name['metrics_rolled_up'] = metrics_rolled_up
DESCRIPTOR.extensions_by_name['m_format_str'] = m_format_str
DESCRIPTOR.extensions_by_name['m_format_func'] = m_format_func
DESCRIPTOR.extensions_by_name['m_aci_skip'] = m_aci_skip
DESCRIPTOR.extensions_by_name['m_aci_schema_tag'] = m_aci_schema_tag
DESCRIPTOR.extensions_by_name['metrics_entity'] = metrics_entity
DESCRIPTOR.extensions_by_name['ev_details_options'] = ev_details_options
DESCRIPTOR.extensions_by_name['db_notification_special'] = db_notification_special
DESCRIPTOR.extensions_by_name['db_notification_select_only'] = db_notification_select_only
DESCRIPTOR.extensions_by_name['base_obj_db_notification'] = base_obj_db_notification
DESCRIPTOR.extensions_by_name['m_skip_cache'] = m_skip_cache
DESCRIPTOR.extensions_by_name['m_heat_skip'] = m_heat_skip
DESCRIPTOR.extensions_by_name['m_skip_datastore'] = m_skip_datastore
DESCRIPTOR.extensions_by_name['m_skip_db2datastore_references'] = m_skip_db2datastore_references

MetricsProviderHypervisor = _reflection.GeneratedProtocolMessageType('MetricsProviderHypervisor', (_message.Message,), dict(
  DESCRIPTOR = _METRICSPROVIDERHYPERVISOR,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:MetricsProviderHypervisor)
  ))
_sym_db.RegisterMessage(MetricsProviderHypervisor)

MetricRespLatencyTimeInterval = _reflection.GeneratedProtocolMessageType('MetricRespLatencyTimeInterval', (_message.Message,), dict(
  DESCRIPTOR = _METRICRESPLATENCYTIMEINTERVAL,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:MetricRespLatencyTimeInterval)
  ))
_sym_db.RegisterMessage(MetricRespLatencyTimeInterval)

MetricsOptions = _reflection.GeneratedProtocolMessageType('MetricsOptions', (_message.Message,), dict(
  DESCRIPTOR = _METRICSOPTIONS,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:MetricsOptions)
  ))
_sym_db.RegisterMessage(MetricsOptions)

MetricsIndexesOption = _reflection.GeneratedProtocolMessageType('MetricsIndexesOption', (_message.Message,), dict(
  DESCRIPTOR = _METRICSINDEXESOPTION,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:MetricsIndexesOption)
  ))
_sym_db.RegisterMessage(MetricsIndexesOption)

MetricsAnomalyzerOptions = _reflection.GeneratedProtocolMessageType('MetricsAnomalyzerOptions', (_message.Message,), dict(
  DESCRIPTOR = _METRICSANOMALYZEROPTIONS,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:MetricsAnomalyzerOptions)
  ))
_sym_db.RegisterMessage(MetricsAnomalyzerOptions)

MetricsAnomalyModelOptions = _reflection.GeneratedProtocolMessageType('MetricsAnomalyModelOptions', (_message.Message,), dict(
  DESCRIPTOR = _METRICSANOMALYMODELOPTIONS,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:MetricsAnomalyModelOptions)
  ))
_sym_db.RegisterMessage(MetricsAnomalyModelOptions)

MetricsRuleOptions = _reflection.GeneratedProtocolMessageType('MetricsRuleOptions', (_message.Message,), dict(
  DESCRIPTOR = _METRICSRULEOPTIONS,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:MetricsRuleOptions)
  ))
_sym_db.RegisterMessage(MetricsRuleOptions)

MetricIdOptions = _reflection.GeneratedProtocolMessageType('MetricIdOptions', (_message.Message,), dict(
  DESCRIPTOR = _METRICIDOPTIONS,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:MetricIdOptions)
  ))
_sym_db.RegisterMessage(MetricIdOptions)

AlertOptions = _reflection.GeneratedProtocolMessageType('AlertOptions', (_message.Message,), dict(
  DESCRIPTOR = _ALERTOPTIONS,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:AlertOptions)
  ))
_sym_db.RegisterMessage(AlertOptions)

MetricsDerivationData = _reflection.GeneratedProtocolMessageType('MetricsDerivationData', (_message.Message,), dict(
  DESCRIPTOR = _METRICSDERIVATIONDATA,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:MetricsDerivationData)
  ))
_sym_db.RegisterMessage(MetricsDerivationData)

CloudTypeOptions = _reflection.GeneratedProtocolMessageType('CloudTypeOptions', (_message.Message,), dict(
  DESCRIPTOR = _CLOUDTYPEOPTIONS,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:CloudTypeOptions)
  ))
_sym_db.RegisterMessage(CloudTypeOptions)

IpAddr = _reflection.GeneratedProtocolMessageType('IpAddr', (_message.Message,), dict(
  DESCRIPTOR = _IPADDR,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:IpAddr)
  ))
_sym_db.RegisterMessage(IpAddr)

IpAddrPrefix = _reflection.GeneratedProtocolMessageType('IpAddrPrefix', (_message.Message,), dict(
  DESCRIPTOR = _IPADDRPREFIX,
  __module__ = 'options_pb2'
  # @@protoc_insertion_point(class_scope:IpAddrPrefix)
  ))
_sym_db.RegisterMessage(IpAddrPrefix)

google_dot_protobuf_dot_descriptor__pb2.ServiceOptions.RegisterExtension(service_transactional)
google_dot_protobuf_dot_descriptor__pb2.ServiceOptions.RegisterExtension(service_q_name)
google_dot_protobuf_dot_descriptor__pb2.ServiceOptions.RegisterExtension(service_rpc_timeout)
google_dot_protobuf_dot_descriptor__pb2.MethodOptions.RegisterExtension(method_transactional)
google_dot_protobuf_dot_descriptor__pb2.MethodOptions.RegisterExtension(method_q_name)
google_dot_protobuf_dot_descriptor__pb2.MethodOptions.RegisterExtension(method_rpc_timeout)
google_dot_protobuf_dot_descriptor__pb2.MethodOptions.RegisterExtension(method_expirable)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(refers_to)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(weak_refers_to)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(belongs_to)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_description)
units.enum_type = _METRICUNITS
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(units)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(range)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(pattern)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(min_elements)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(max_elements)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(union_enum)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(special_values)
metric_type.enum_type = _METRICTYPE
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metric_type)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(string_length)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_must)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(ordered_by)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(hyperlink_to)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(special_default)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_typedef)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_readonly)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_blob_message)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(disp_hyperlink_to)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_sensitive)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_hidden)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_skip_input_check)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_json_default)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_create_heat_resource)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_mandatory)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(deprecated_in)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(introduced_in)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_immutable)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_internal)
agg_op.enum_type = _PBAGGOP
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(agg_op)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(table_column)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(disruptive_update)
metrics_hypervisor.message_type = _METRICSPROVIDERHYPERVISOR
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metrics_hypervisor)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(sec_idx)
aggregate.enum_type = _AGGREGATETYPE
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(aggregate)
metrics_derivation.message_type = _METRICSDERIVATIONDATA
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metrics_derivation)
metric_units.enum_type = _METRICUNITS
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metric_units)
metrics_resp_latency_bkt.message_type = _METRICRESPLATENCYTIMEINTERVAL
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metrics_resp_latency_bkt)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metrics_min_scale)
metrics_msg_handler.enum_type = _METRICSAGENTMSGHANDLER
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metrics_msg_handler)
magg_function.enum_type = _METRICSAGGREGATIONFUNCTION
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(magg_function)
metrics_id_options.message_type = _METRICIDOPTIONS
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metrics_id_options)
metrics_rule_options.message_type = _METRICSRULEOPTIONS
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metrics_rule_options)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_aci_skip)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metric_max_check_skip)
m_anomalyzer_priority.enum_type = _METRICANOMALYZERPRIORITY
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(m_anomalyzer_priority)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_stdin)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metrics_sum_agg_invalid)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metrics_skip_inactivity_agg)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(f_cli_completion)
metrics_anomalyzer_opts.message_type = _METRICSANOMALYZEROPTIONS
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(metrics_anomalyzer_opts)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(diff_skip)
se_metric_type.enum_type = _SEMETRICTYPE
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(se_metric_type)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(deprecated)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(hstree_node)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(has_dominant_contributors)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(hstree_linkto)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(hsval_enum)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(hstree_combine_fn)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(sortable)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(groupable)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(xml_attr)
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(pool_sharing_agg_sum_valid)
magg_node_function.enum_type = _METRICSAGGREGATIONFUNCTION
google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(magg_node_function)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(text)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(e_description)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_desc)
error_type.enum_type = _VINFRAERRCATEGORY
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(error_type)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(e_format_str)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(e_format_func)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(os_secgrp_protocol)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_details)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_object)
sysev_alert_options.message_type = _ALERTOPTIONS
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(sysev_alert_options)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_internal)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(http_ref)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_page_pool)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_page_vs)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_page_se)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_page_cntlr)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_page_admin_account)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_page_audit_trail)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_page_all)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(generic_event)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(ignore_event_details)
metrics_indexes_option.message_type = _METRICSINDEXESOPTION
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(metrics_indexes_option)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(e_recommendation)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_desc_func)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(ssl_performance)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(ssl_compatibility)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(ssl_security)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(ssl_security_score)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(is_security_event)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(category_title)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(dos_event_id_name)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(ssl_tls_1_0)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(ssl_tls_1_1)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(ssl_tls_1_2)
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(event_verbose)
attack_category.enum_type = _ATTACKCATEGORY
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(attack_category)
cloud_type_options.message_type = _CLOUDTYPEOPTIONS
google_dot_protobuf_dot_descriptor__pb2.EnumValueOptions.RegisterExtension(cloud_type_options)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_typedef)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_union)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(key)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(unique)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(submode)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_must)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_transform)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_default)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_blob_nested_messages)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_resolve)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_pre)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_optional_check)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(message_root)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(db_notification)
metrics_options.message_type = _METRICSOPTIONS
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(metrics_options)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(metrics_rolled_up)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_format_str)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_format_func)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_aci_skip)
m_aci_schema_tag.enum_type = _ACISCHEMATAG
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_aci_schema_tag)
metrics_entity.enum_type = _METRICSENTITYTYPE
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(metrics_entity)
ev_details_options.enum_type = _EVENTDETAILSOPTIONS
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(ev_details_options)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(db_notification_special)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(db_notification_select_only)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(base_obj_db_notification)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_skip_cache)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_heat_skip)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_skip_datastore)
google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(m_skip_db2datastore_references)

DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\030com.avinetworks.protobuf\210\001\001'))
_METRICSINDEXES.values_by_name["METRIC_TIMESTAMP"].has_options = True
_METRICSINDEXES.values_by_name["METRIC_TIMESTAMP"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\013\262\230\"\002\030\000\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["METRIC_PERIOD"].has_options = True
_METRICSINDEXES.values_by_name["METRIC_PERIOD"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\010\262\230\"\r:\013period_type\262\230\"\002\030\000\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["POOL_KEY"].has_options = True
_METRICSINDEXES.values_by_name["POOL_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0252\023pool_table.pool_key\262\230\"\002 \001\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["OBJ_KEY"].has_options = True
_METRICSINDEXES.values_by_name["OBJ_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0232\021obj_table.obj_key\262\230\"\002 \001\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["ENTITY_KEY"].has_options = True
_METRICSINDEXES.values_by_name["ENTITY_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0312\027entity_table.entity_key\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["NODE_KEY"].has_options = True
_METRICSINDEXES.values_by_name["NODE_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0252\023node_table.node_key\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["COUNTRY_KEY"].has_options = True
_METRICSINDEXES.values_by_name["COUNTRY_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0332\031country_table.country_key\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["OS_KEY"].has_options = True
_METRICSINDEXES.values_by_name["OS_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0212\017os_table.os_key\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["URL_KEY"].has_options = True
_METRICSINDEXES.values_by_name["URL_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0232\021url_table.url_key\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["DEVTYPE_KEY"].has_options = True
_METRICSINDEXES.values_by_name["DEVTYPE_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0332\031devtype_table.devtype_key\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["LANG_KEY"].has_options = True
_METRICSINDEXES.values_by_name["LANG_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0252\023lang_table.lang_key\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["BROWSER_KEY"].has_options = True
_METRICSINDEXES.values_by_name["BROWSER_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0332\031browser_table.browser_key\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["CI_SRC_TYPE"].has_options = True
_METRICSINDEXES.values_by_name["CI_SRC_TYPE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\020\010\262\230\"\025:\023metrics_ci_src_type'))
_METRICSINDEXES.values_by_name["IPGROUP_KEY"].has_options = True
_METRICSINDEXES.values_by_name["IPGROUP_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0332\031ipgroup_table.ipgroup_key\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["TENANT_KEY"].has_options = True
_METRICSINDEXES.values_by_name["TENANT_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0312\027tenant_table.tenant_key\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["ENTITY_TYPE"].has_options = True
_METRICSINDEXES.values_by_name["ENTITY_TYPE"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\010\262\230\"\016:\014entity_types\262\230\"\002\030\000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["ATTACK_KEY"].has_options = True
_METRICSINDEXES.values_by_name["ATTACK_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0312\027attack_table.attack_key\262\230\"\002 \000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["DIMENSIONID_KEY"].has_options = True
_METRICSINDEXES.values_by_name["DIMENSIONID_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"#2!dimensionid_table.dimensionid_key\262\230\"\002\030\000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["METRICS_DIMENSION"].has_options = True
_METRICSINDEXES.values_by_name["METRICS_DIMENSION"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\010\262\230\"\031:\027metrics_dimension_types\262\230\"\002\030\000\262\230\"\002(\001'))
_METRICSINDEXES.values_by_name["ASN_KEY"].has_options = True
_METRICSINDEXES.values_by_name["ASN_KEY"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\262\230\"\002\010\001\262\230\"\002\020\001\262\230\"\002\030\000\262\230\"\0232\021asn_table.asn_key\262\230\"\002 \000\262\230\"\002(\001'))
_ATTACKCATEGORY.values_by_name["VOLUMETRIC"].has_options = True
_ATTACKCATEGORY.values_by_name["VOLUMETRIC"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\222\227\"/Class of attacks which are volumetric in nature'))
_ATTACKCATEGORY.values_by_name["NON_VOLUMETRIC"].has_options = True
_ATTACKCATEGORY.values_by_name["NON_VOLUMETRIC"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\222\227\"?Class of attacks which are specifically non-volumetricin nature'))
_ALERTLEVEL.values_by_name["ALERT_LOW"].has_options = True
_ALERTLEVEL.values_by_name["ALERT_LOW"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\227\"\003Low'))
_ALERTLEVEL.values_by_name["ALERT_MEDIUM"].has_options = True
_ALERTLEVEL.values_by_name["ALERT_MEDIUM"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\227\"\006Medium'))
_ALERTLEVEL.values_by_name["ALERT_HIGH"].has_options = True
_ALERTLEVEL.values_by_name["ALERT_HIGH"]._options = _descriptor._ParseOptions(descriptor_pb2.EnumValueOptions(), _b('\212\227\"\004High'))
_METRICSANOMALYZEROPTIONS.fields_by_name['skip_eval_period'].has_options = True
_METRICSANOMALYZEROPTIONS.fields_by_name['skip_eval_period']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\240\001Skip the training period for anomaly. Should only be used for special error cases where we don\'t wantto wait for exponential moving average to learn the pattern'))
_METRICSANOMALYMODELOPTIONS.fields_by_name['anomaly_model'].has_options = True
_METRICSANOMALYMODELOPTIONS.fields_by_name['anomaly_model']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\250\001The model to use. For Holt Winters methods, thealpha, beta, gamma, are set with inputs from the paper: Aberrant Behavior Detection in Time Series for Network Monitoring'))
_METRICSANOMALYMODELOPTIONS.fields_by_name['period'].has_options = True
_METRICSANOMALYMODELOPTIONS.fields_by_name['period']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035WSpecify the period for which the seasonality applies. To be used with HoltWinters only.'))
_METRICSANOMALYMODELOPTIONS.fields_by_name['seasonality'].has_options = True
_METRICSANOMALYMODELOPTIONS.fields_by_name['seasonality']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\206\001Seasonality for the metric if HoltWinters is to be applied. E.g. for data repeating annually with per month samples, seasonality is 12'))
_METRICSANOMALYMODELOPTIONS.fields_by_name['alpha'].has_options = True
_METRICSANOMALYMODELOPTIONS.fields_by_name['alpha']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035LHW: alpha. Gives 95% weight to (5min) samples in the last hour (12 samples).'))
_METRICSANOMALYMODELOPTIONS.fields_by_name['beta'].has_options = True
_METRICSANOMALYMODELOPTIONS.fields_by_name['beta']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035MHW: beta. Gives 50% weight to (5min) samples in the last week (2016 samples).'))
_METRICSANOMALYMODELOPTIONS.fields_by_name['gamma'].has_options = True
_METRICSANOMALYMODELOPTIONS.fields_by_name['gamma']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\tHW: gamma'))
_METRICSANOMALYMODELOPTIONS.fields_by_name['delta'].has_options = True
_METRICSANOMALYMODELOPTIONS.fields_by_name['delta']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\tHW: delta'))
_METRICSANOMALYMODELOPTIONS.fields_by_name['allowed_entity_types'].has_options = True
_METRICSANOMALYMODELOPTIONS.fields_by_name['allowed_entity_types']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035.Entity types for which to do anomaly detection'))
_METRICSRULEOPTIONS.fields_by_name['only_positive_anomalies'].has_options = True
_METRICSRULEOPTIONS.fields_by_name['only_positive_anomalies']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035agenerate events only for positive deviations. Used only for the Generate Events on Anomaly option'))
_METRICSRULEOPTIONS.fields_by_name['valid_event_period'].has_options = True
_METRICSRULEOPTIONS.fields_by_name['valid_event_period']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\0350Period for which the events are to be generated.'))
_IPADDR.fields_by_name['addr'].has_options = True
_IPADDR.fields_by_name['addr']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\242\246\035\nIP address'))
_IPADDR.has_options = True
_IPADDR._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\212\246\035\034IP4 Address format <x.x.x.x>\232\246\035\004addr'))
_IPADDRPREFIX.has_options = True
_IPADDRPREFIX._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\212\246\035\035IP4 Prefix format <x.x.x.x/x>\232\246\035\014ip_addr,mask'))
# @@protoc_insertion_point(module_scope)
