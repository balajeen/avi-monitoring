To generate a kube python client, do the foll on your dev machine:

    Download kube git repo
    ----------------------

    From https://github.com/kubernetes/kubernetes download .zip and unzip
    repo to /home/aviuser. Swagger json file is at 
    /home/aviuser/kubernetes-master/api/swagger-spec/v1.json

    Clone and build a swagger-codegen binary
    ----------------------------------------

    git clone https://github.com/swagger-api/swagger-codegen
    cd swagger-codegen
    mvn clean package

    Generate a python client
    ------------------------

    java -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar generate -i /home/aviuser/kubernetes-master/api/swagger-spec/v1.json -l python -o /home/aviuser/kube-python

    This will generate the python client at 
    /home/aviuser/kube-python/swagger_client

    Copy everything under swagger_client to packaging/bootstrap/custom_eggs_controller/k8sclient

Original instructions from http://www.devoperandi.com/python-client-for-kubernetes/

    NB - add API timeout:
    --------------------
    Patch rest.py:RESTClientObject to add timeout=10, retries=0 when 
    self.pool_manager is instantiated. By default, there's no timeout for
    API calls

    Usage
    -----

    Copy out ca.crt, admin.crt and admin.key from /etc/origin/master on 
    OpenShift master

    from k8sclient import *
    configuration.host='https://host:8443'
    configuration.ssl_ca_cert='path_to/ca.crt'
    configuration.cert_file='path_to/admin.crt'
    configuration.key_file='path_to/admin.key'
    client = api_client.ApiClient('https://host:8443')
    api=apis.ApivApi(client)
    pods=api.list_namespaced_pod('openshift')
    for p in pods:
        print p.to_dict
