### WARNING: This file is auto-generated using templates/basic.template
### from {{ robot_info.pop('source') }}
### Please refactor to conform to pytest standards
### Most Robot BuiltIn functions and constants are NOT IMPLEMENTED (and may never be).
### File Jira to vote for common builtins you'd like to see added to this utility.

import pytest

# Robot Imports
# FIXME: Please update with exact imports in pytest
{% for suite_name, suite_info in robot_info.iteritems() %}
{%- for library in suite_info['imports'] -%}
from {{ library }} import *
{% endfor %}
class {{ suite_name }}(object):

    # Variables
    # REVIEW eval'ed vars may look ugly but should be syntactically correct, please refactor as appropriate
  {%- for var, val in suite_info['variables'] %}
  {%- if var.startswith('#') %}
    {{ var }}
  {%- else %}
    {{ var }}={{ val }}
  {%- endif %}
  {%- endfor %}

    # Keywords
  {%- for (keyword_name, keyword_args), keyword_steps in suite_info['keywords'].iteritems() %}
    def {{ keyword_name }}({{ keyword_args }}):
      {%- for step, args in keyword_steps %}
      {%- if step.startswith('#') %}
        {{ step }}
      {%- elif step.startswith('"""') %}
        {{ step }}
      {%- elif step.startswith('for') %}
        {{ step }}
          {%- for arg in args %}
            {{ arg }}
	  {%- endfor %}
      {%- else %}
        {{ step }}({{ args }})
      {%- endif %}
      {%- endfor %}
  {% endfor %}

    # Test Cases
  {%- for test_name, test_steps in suite_info['testcases'].iteritems() %}
    def test_{{ test_name }}(self):
      {%- for step, args in test_steps %}
      {%- if step.startswith('#') %}
        {{ step }}
      {%- elif step.startswith('"""') %}
        {{ step }}
      {%- elif step.startswith('for') %}
        {{ step }}
          {%- for arg in args %}
            {{ arg }}
          {%- endfor %}
      {%- else %}
        {{ step }}({{ args }})
      {%- endif %}
      {%- endfor %}
  {% endfor %}

{% endfor %}
